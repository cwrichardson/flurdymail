---
AWSTemplateFormatVersion: 2010-09-09

Description: 'Mirovoy Reference Architecture - Create Security Groups
    This template creates the security groups to secure the Mirovoy Reference
    Architecture.'

Metadata:

  Authors:
    Description: Chris Richardson (cwr@mirovoysales.com)

  License:
    Description: 'Copyright 2018-2019 Mirovoy Sales, s.r.o. and its affiliates.
      All Rights Reserved.
      SPDX-License-Identifier: MIT-0'

  History:
    Description: This work is based off of the aws-refarch-wordpress
      templates originally authored by Darryl Osborne (darrylo@amazon.com)

  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: AWS Parameters
        Parameters:
          - SshAccessCidr
          - Vpc
          - AppSubnet1Cidr
          - AppSubnet2Cidr
      - Label:
          default: Optional security groups to create
        Parameters:
          - CreateMailSecGroup

    ParameterLabels:
      AppSubnet1Cidr:
        default: App Subnet 1
      AppSubnet2Cidr:
        default: App Subnet 2
      CreateMailSecGroup:
        default: Create a security group for mail servers
      NumberOfAZs:
        default: Number of Availability Zones
      SshAccessCidr:
        default: SSH Access From
      Vpc:
        default: Vpc Id

Parameters:
  AppSubnet1Cidr:
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/(1[6-9]|2[0-8])'
    ConstraintDescription: CIDR block parameter must be in the form
      x.x.x.x/16-28
    Default: 10.0.4.0/22
    Description: CIDR block for App subnet 1 located in Availability Zone 1.
      NAT instances in Public Availability Zone 1 will accept connections
      on ports 80 and 443 from this CIDR block.
    Type: String
  AppSubnet2Cidr:
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/(1[6-9]|2[0-8])'
    ConstraintDescription: CIDR block parameter must be in the form
      x.x.x.x/16-28
    Default: 10.0.8.0/22
    Description: CIDR block for App subnet 1 located in Availability Zone 1.
      NAT instances in Public Availability Zone 1 will accept connections
      on ports 80 and 443 from this CIDR block.
    Type: String
  SshAccessCidr:
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/\d{1,2}'
    Description: The CIDR IP range that is permitted to SSH to bastion
      instance. Note - a value of 0.0.0.0/0 will allow access from ANY IP
      address.
    Type: String
    Default: 0.0.0.0/0
  Vpc:
    AllowedPattern: ^(vpc-)([a-z0-9]{8}|[a-z0-9]{17})$
    Description: The Vpc Id of an existing Vpc.
    Type: AWS::EC2::VPC::Id
  CreateMailSecGroup:
    AllowedValues:
      - 'True'
      - 'False'
    Default: 'True'
    Description: Create a security group for use by mail servers
    Type: String

Conditions:

  2AZs:
    !Not [!Equals ['', !Ref AppSubnet2Cidr]]
  WantsMail:
    !Equals ['True', !Ref CreateMailSecGroup]

Resources:

  BastionSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for Bastion instances
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref SshAccessCidr
      VpcId:
        !Ref Vpc

  PublicAlbSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for ALB
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      VpcId:
        !Ref Vpc       

  NatSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for NAT Instances
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          SourceSecurityGroupId: !Ref BastionSecurityGroup
        # Always allow ports 80 and 443, so at a minimum instances can get
        # security updates (yum uses these ports)
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: !Ref AppSubnet1Cidr
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: !Ref AppSubnet1Cidr
      VpcId:
        !Ref Vpc

  NatSecurityGroupIngress2port80:
    Type: AWS::EC2::SecurityGroupIngress
    Condition: 2AZs
    Properties:
      GroupId: !Ref NatSecurityGroup
      IpProtocol: tcp
      FromPort: 80
      ToPort: 80
      CidrIp: !Ref AppSubnet2Cidr

  NatSecurityGroupIngress2port443:
    Type: AWS::EC2::SecurityGroupIngress
    Condition: 2AZs
    Properties:
      GroupId: !Ref NatSecurityGroup
      IpProtocol: tcp
      FromPort: 443
      ToPort: 443
      CidrIp: !Ref AppSubnet2Cidr

  DatabaseSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for RDS Databases
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 3306
          ToPort: 3306
          CidrIp: !Ref AppSubnet1Cidr
      VpcId:
        !Ref Vpc

  DatabaseSecurityGroupIngressApp2:
    Type: AWS::EC2::SecurityGroupIngress
    Condition: 2AZs
    Properties:
      GroupId: !Ref DatabaseSecurityGroup
      IpProtocol: tcp
      FromPort: 3306
      ToPort: 3306
      CidrIp: !Ref AppSubnet2Cidr

  DatabaseSecurityGroupIngressMail:
    Type: AWS::EC2::SecurityGroupIngress
    Condition: WantsMail
    Properties:
      GroupId: !Ref DatabaseSecurityGroup
      IpProtocol: tcp
      FromPort: 3306
      ToPort: 3306
      SourceSecurityGroupId: !Ref MailSecurityGroup

  MailSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Condition: WantsMail
    Properties:
      GroupDescription: Security group for MX Servers
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          SourceSecurityGroupId: !Ref BastionSecurityGroup
          #
          # port 25 for SMTP relay between servers
          # 587 for SMPT from clients (STARTLS)
          # 993 for IMAP
          # 995 for POP3
          #
        - IpProtocol: tcp
          FromPort: 25
          ToPort: 25
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 587
          ToPort: 587
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 993
          ToPort: 993
          CidrIp: 0.0.0.0/0
      VpcId:
        !Ref Vpc

Outputs:
  BastionSecurityGroup:
    Description: Security group for jump/bastion servers
    Value: !Ref BastionSecurityGroup
  DatabaseSecurityGroup:
    Description: Security group for RDS database access
    Value: !Ref DatabaseSecurityGroup
  MailSecurityGroup:
    Condition: WantsMail
    Description: Security group for MX servers
    Value: !Ref MailSecurityGroup
  NatSecurityGroup:
    Description: Security group for NAT instances
    Value: !Ref NatSecurityGroup
  PublicAlbSecurityGroup:
    Description: Security group for the public load balancer
    Value: !Ref PublicAlbSecurityGroup
