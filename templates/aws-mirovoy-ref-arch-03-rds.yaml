---
AWSTemplateFormatVersion: 2010-09-09

Description: 'Mirovoy Reference Architecture - Launch RDS
    This template creates a MySQL database, and optionally a read-replica copy
    in an alternative availability zone.'

Metadata:
  Authors:
    Description: Chris Richardson (cwr@mirovoysales.com)

  License:
    Description: 'Copyright 2018-2021 Mirovoy Sales, s.r.o. and its affiliates.
      All Rights Reserved.
      SPDX-License-Identifier: MIT-0'

  History:
    Description: This work is based off of the aws-refarch-wordpress
      templates originally authored by Darryl Osborne (darrylo@amazon.com)

  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Database Parameters
        Parameters:
          - DatabaseInstanceType
          - DatabaseMasterUsername
          - DatabaseMasterPassword
          - DatabaseSecurityGroup
          - CreateReplica
          - NumberOfSubnets
          - Subnet
      - Label:
          default: Database Encryption
        Parameters:
          - DatabaseEncryptedBoolean
          - DatabaseCmk
      - Label:
          default: Restore Backup
        Parameters:
          - DatabaseRestoreSnapshot

    ParameterLabels:
      DatabaseEncryptedBoolean:
        default: Encrypted DB Cluster
      DatabaseCmk:
        default: AWS KMS Customer Master Key (CMK) to encrypt DB
      DatabaseInstanceType:
        default: DB Instance Class
      DatabaseMasterUsername:
        default: DB Master Username
      DatabaseMasterPassword:
        default: DB Master Password
      DatabaseRestoreSnapshot:
        default: RDS Database Snapshot from which to restore
      DatabaseSecurityGroup:
        default: DB Security Group
      CreateReplica:
        default: Create Replica
      NumberOfSubnets:
        default: Number of subnets
      Subnet:
        default: Subnets

Parameters:
  DatabaseEncryptedBoolean:
    AllowedValues:
      - true
      - false
    Default: true
    Description: "Indicates whether the DB instances in the cluster are
      encrypted. NOTE: if you select t2.micro as the instance type, then this
      must be set to 'false', as encryption at rest is unsupported for that
      instance type."
    Type: String
  DatabaseCmk:
    Description: AWS KMS Customer Master Key (CMK) to encrypt database cluster
    Type: String
  DatabaseInstanceType:
    AllowedValues:
      - db.t2.micro
      - db.t2.small
      - db.t2.medium
      - db.t2.large
      - db.t2.xlarge
      - db.r3.large
      - db.r3.xlarge
      - db.r3.2xlarge
      - db.r3.4xlarge
      - db.r3.8xlarge
      - db.r4.large
      - db.r4.xlarge
      - db.r4.2xlarge
      - db.r4.4xlarge
      - db.r4.8xlarge
      - db.r4.16xlarge
    ConstraintDescription: Must be a valid RDS instance class.
    Default: db.t2.medium
    Description: The Amazon RDS database instance class.
    Type: String
  DatabaseMasterUsername:
    AllowedPattern: ^([a-zA-Z0-9]*)$
    ConstraintDescription: "Must contain only alphanumeric characters
      (maximum 32)."
    Default: root
    Description: The "root" user to configure for the Amazon RDS database.
    MaxLength: 32
    MinLength: 1
    Type: String
  DatabaseMasterPassword:
    AllowedPattern: ^([a-z0-9A-Z`~!#$%^&*()_+,\\-])*$
    ConstraintDescription: "Must be letters (upper or lower), numbers, and
      these special characters '_'`~!#$%^&*()_+,-"
    Description: The Amazon RDS "root" user password
    MaxLength: 41
    MinLength: 8
    NoEcho: true
    Type: String
  DatabaseRestoreSnapshot:
    Description: "When doing a rollover (e.g., red-green swap) between AWS
      stacks, you can populate the database from a snapshot of the other 
      RDS instance. If using an automatic snapshot, enter the snapshot name.
      If using a shared manual snapshot, use the snapshot ARN. NOTE: when
      restoring from a snapshot, most other database configuration parameters
      are ignored."
    Type: String
  DatabaseSecurityGroup:
    Description: Select the database security group.
    Type: AWS::EC2::SecurityGroup::Id
  CreateReplica:
    AllowedValues:
      - true
      - false
    Default: true
    Description: "Whether or not to create a read-replica instance of the
      database."
    Type: String
  NumberOfSubnets:
    AllowedValues:
      - 2
    Default: 2
    Description: 'Number of subnets. This must match your selections in the
      list of subnets below. Currently the only valid choice is 2.'
    Type: String
  Subnet:
    Description: 'Select existing subnets. The number selected must match the
      number of subnets above. Subnets selected must be in separate AZs.'
    Type: List<AWS::EC2::Subnet::Id>

Conditions:
  NumberOfSubnets1:
    !Equals [1, !Ref NumberOfSubnets]
  NumberOfSubnets2:
    !Equals [2, !Ref NumberOfSubnets]
  NumberOfSubnets3:
    !Equals [3, !Ref NumberOfSubnets]
  Subnet0: !Or
    - !Condition NumberOfSubnets1
    - !Condition NumberOfSubnets2
    - !Condition NumberOfSubnets3
  Subnet1: !Or
    - !Condition NumberOfSubnets2
    - !Condition NumberOfSubnets3
  Subnet2: !Condition NumberOfSubnets3
  UseAWS-ManagedCMK:
    !Equals ['', !Ref DatabaseCmk]
  NoSnapshot:
    !Equals ['', !Ref DatabaseRestoreSnapshot]
  ReplicaOn:
    !Equals [true, !Ref CreateReplica]

Resources:
  MasterDB:
    Type: AWS::RDS::DBInstance
    DeletionPolicy: Delete
    Properties:
      AllocatedStorage: 20
      AllowMajorVersionUpgrade: false
      AutoMinorVersionUpgrade: true
      BackupRetentionPeriod: 30
      DBInstanceClass: !Ref DatabaseInstanceType
      DBSubnetGroupName: !Ref DataSubnetGroup
      Engine: mysql
      EngineVersion: 8.0
      KmsKeyId:
        !If [UseAWS-ManagedCMK, !Ref 'AWS::NoValue', !Ref DatabaseCmk]
      MasterUsername: !If [NoSnapshot, !Ref DatabaseMasterUsername,
                           !Ref 'AWS::NoValue']
      MasterUserPassword: !If [NoSnapshot, !Ref DatabaseMasterPassword,
                               !Ref 'AWS::NoValue']
      Port: 3306
      StorageEncrypted: !Ref DatabaseEncryptedBoolean
      DBSnapshotIdentifier: !If [NoSnapshot, !Ref 'AWS::NoValue',
                               !Ref DatabaseRestoreSnapshot]
      Tags:
        - Key: Name
          Value: !Join ['', ['Master DB / ', !Ref 'AWS::StackName']]
      VPCSecurityGroups:
        - !Ref DatabaseSecurityGroup

  ReadReplicaDB:
    Type: AWS::RDS::DBInstance
    Condition: ReplicaOn
    Properties:
      DBInstanceClass: !Ref DatabaseInstanceType
      SourceDBInstanceIdentifier: !Ref MasterDB
      Tags:
        - Key: Name
          Value: !Join ['', ['Read Replica DB / ', !Ref 'AWS::StackName']]

  DataSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: RDS Database Subnet Group for Mirovoy Main DBs
      SubnetIds:
        !If [NumberOfSubnets1,
             [!Select [0, !Ref Subnet]],
             !If [NumberOfSubnets2,
                  [!Select [0, !Ref Subnet], !Select [1, !Ref Subnet]],
                  [!Select [0, !Ref Subnet], !Select [1, !Ref Subnet],
                   !Select [2, !Ref Subnet]]
             ]
        ]
      Tags:
        - Key: Name
          Value: !Join ['', ['Database Subnet Group / ', !Ref 'AWS::StackName']]

  DataSecretStrings:
    Type: AWS::SecretsManager::Secret
    Properties:
      Description: "Storage of master DB username & password."
      SecretString: !Sub '{"user":"${DatabaseMasterUsername}",
        "password":"${DatabaseMasterPassword}"}'
      Name: !Join ['', [!Ref 'AWS::StackName', '-dbcreds']]

Outputs:
  DatabaseInstance0:
    Value: !Ref MasterDB
  DatabaseInstance1:
    Condition: ReplicaOn
    Value: !Ref ReadReplicaDB
  DataSubnetGroup:
    Value: !Ref DataSubnetGroup
  MasterDatabaseEndpointAddress:
    Value: !GetAtt MasterDB.Endpoint.Address
    Export:
      Name: !Sub "${AWS::StackName}-MasterDBEndpoint"
  ReadReplicaEndpointAddress:
    Condition: ReplicaOn
    Value: !GetAtt ReadReplicaDB.Endpoint.Address
    Export:
      Name: !Sub "${AWS::StackName}-ReplicaDBEndpoint"
  StackName:
    Value: !Ref "AWS::StackName"
