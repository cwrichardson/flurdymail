---
AWSTemplateFormatVersion: 2010-09-09

Description: 'Mirovoy Reference Architecture - Create mail servers
    This template creates a primary mail server that runs courier-postfix
    for inbound and outbound mail, and a backup MX server in a
    separate AZ.'

Metadata:

  Authors:
    Description: Chris Richardson (cwr@mirovoysales.com)
  License:
    Description: 'Copyright 2018-2019 Mirovoy Sales, s.r.o. and its affiliates.
      All Rights Reserved.
      SPDX-License-Identifier: MIT-0'

  History:
    Description: 'This work is based off of the aws-refarch-wordpress
      templates originally authored by Darryl Osborne (darrylo@amazon.com).
      The mail server details are taken from the famous Flurdy guide
      (http://flurdy.com/docs/postfix/) by Ivar Abrahamsen
      (http://flurdy.com/docs/postfix/#author) as extended by Jon Jerome
      (https://xec.net/dovecot-migration/#author) for Dovecot support.'

    FlurdyEdition: 14
    XECRelease: 2018-03-30

  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Mail EC2 Instance Parameters
        Parameters:
          - PrimaryServerName
          - VirtualUID
          - EC2KeyName
          - MailInstanceType
          - MailAMIID
          - MailSecurityGroup
          - StorageStackName
          - UseSwap
          - PrimarySubnet
          - BackupSubnet
      - Label:
          default: Create Admin User
        Parameters:
          - AdminUser
          - AdminPubKey
      - Label:
          default: Database Parameters
        Parameters:
          - DatabaseStackName
          - MailDBName
          - MailDBUser
          - MailDBPassword
      - Label:
          default: AWS S3 Configuration
        Parameters:
          - MirovoyCFAssetsBucket
          - MYS3KeyPrefix
          - SkelFileDir
      - Label:
          default: Postfix Primary Parameters
        Parameters:
          - Origin
          - Banner
          - RelayHost
          - RootMailRecipient
          - InetProtocols
      - Label:
          default: SSL Parameters
        Parameters:
          - CertSource
          - AccountEmail
          - DNSZone
          - CertFileDir
      - Label:
          default: Dovecot Parameters
        Parameters:
          - MaxUserConnections
      - Label:
          default: Amavisd, SpamAssassin, ClamAV
        Parameters:
          - SAFinalDest
          - SAKillLevelDeflt
          - SetMyHost
      - Label:
          default: Testing Configuration
        Parameters:
          - InsertTestData
          - UnknownLocalErrorCode
          - XandrosPass
          - VivitaPass
          - ExternalTestEmail
          - SSLDebug
          - ADLogLevel
          - DisableVirusChecks
          - DisableSpamChecks
          - DisableServices
      - Label:
          default: Postfix Optional Parameters
        Parameters:
          - DelayWarningTime
          - MaxQueueLifetime
          - MinBackoffTime
          - MaxBackoffTime
          - HeloTimeout
          - RecipientLimit
          - SoftErrLimit
          - HardErrLimit

    ParameterLabels:
      AccountEmail:
        default: Email for letsencrypt
      ADLogLevel:
        default: AmavisD log level
      AdminUser:
        default: Alternative superuser account to create
      AdminPubKey:
        default: SSH public key for the AdminUser
      BackupSubnet:
        default: Subnet in which to place the backup mail server
      Banner:
        default: SMTPD banner message
      CertFileDir:
        default: S3 Directory for SSL certificate files
      CertSource:
        default: Source for SSL certificate(s)
      DatabaseStackName:
        default: Name for the stack that created the RDS instances
      DelayWarningTime:
        default: Wait before warning sender
      DisableSpamChecks:
        default: Disable spam checks, even if amavisd is running
      DisableVirusChecks:
        default: Disable virus checks, even if amavisd is running
      DisableServices:
        default: Services to disable for testing purposes
      DNSZone:
        default: DNS Zone for SSL cert verification
      EC2KeyName:
        default: Existing Key Pair
      ExternalTestEmail:
        default: External email to test mail forwarding
      HardErrLimit:
        default: How many errors before block
      HeloTimeout:
        default: How long to wait
      InetProtocols:
        default: Which IP version to support
      InsertTestData:
        default: Insert test users and domains in database
      MailInstanceType:
        default: Mail Instance Type
      MailAMIID:
        default: AMI ID for Mail Servers
      MailSecurityGroup:
        default: Mail Security Group
      MailDBName:
        default: Mail Database Name
      MailDBUser:
        default: Mail Database Username
      MailDBPassword:
        default: Mail Database Password
      MaxBackoffTime:
        default: Seconds between retries
      MaxQueueLifetime:
        default: How long to keep messages in queue
      MaxUserConnections:
        default: Maximum number of user connections
      MinBackoffTime:
        default: Seconds between retries
      MirovoyCFAssetsBucket:
        default: Mirovvoy CloudFront Assets S3 bucket name
      MYS3KeyPrefix:
        default: Mirovoy CloudFront Assets Bastion S3 bucket key prefix
      Origin:
        default: My origin
      PrimaryServerName:
        default: The name of the primary mail server
      PrimarySubnet:
        default: Subnet in which to place the primary mail server
      RecipientLimit:
        default: Max in the "to" line
      RelayHost:
        default: Send outbound mail via
      RootMailRecipient:
        default: Who receives local mail for root
      SAFinalDest:
        default: SPAM Final Destination
      SAKillLevelDeflt:
        default: Amavisd sa_kill_level_deflt
      SetMyHost:
        default: Set myhost and mydomain
      SkelFileDir:
        default: S3 Directory for /etc/skel files
      SoftErrLimit:
        default: How many errors before backoff
      SSLDebug:
        default: Enable acme.sh debugging
      StorageStackName:
        default: Name for the stack that created the EBS volumes
      UnknownLocalErrorCode:
        default: Temp or perm unknown local address error code
      UseSwap:
        default: Mount swap volumes?
      VirtualUID:
        default: UID for the virtual user
      VivitaPass:
        default: Email password for test-user vivita
      XandrosPass:
        default: Email password for test-user xandros

Parameters:

  AccountEmail:
    AllowedPattern: "^.+@.+\\..+|^$"
    ConstraintDescription: "Must be a valid email address"
    Default: ''
    Description: 'The email address for submitting to LetsEncrypt. Generally
      set at account level rather than domain.'
    Type: String
  ADLogLevel:
    AllowedValues:
      - 1
      - 2
    Default: 1
    Description: Sets amavisd logging level. When set to 2, it also changes
      the syslog_priority from "info" to "debug".
    Type: Number
  AdminUser:
    AllowedPattern: "^[a-z][-a-z0-9]*$|^$"
    ConstraintDescription: "Must be a valid username for the OS to
      be used.  For sanity's sake, confining this to starting with
      a lower-case letter, followed by an arbitrary number of
      lower-case letters, numbers, and the dash character ('-')."
    Description: 'An alternate account (unix user) to be created on mail
      servers with superuser permissions.'
    Type: String
  AdminPubKey:
    Default: ''
    Description: 'The public key text to be installed in the
      authorized_hosts file for the alternate account created above.
      Will also be installed in authorized_hosts for the default
      admin user (ec2-user). Probably just cut and paste the contents
      of your id_rsa.pub file for the user.'
    Type: String
  Banner:
    Default: "$myhostname ESMTP $mail_name"
    Description: What to display when someone connects for SMTP.
      It should be enough to be useful, but not give away unnecessary
      information to potential hackers.
    Type: String
  CertFileDir:
    Default: ""
    Description: "Path under S3 prefix from which to grab SSL certs.
      Should end in a slash."
    Type: String
  CertSource:
    AllowedValues:
      - generate test
      - generate real
      - S3
      - none
    Default: generate test
    Description: Where to get the SSL certificates. By default, certificates
      will be obtained from the LetsEncrypt staging server (fake certs,
      untrusted in the wild). Set to "generate real" to generate real
      LetsEncrypt certs. Set to "S3" to download certificates from the
      certificate file directory specified under you S3 bucket/prefix.
      Set to "none" to manually install your certificates later.
    Type: String
  DelayWarningTime:
    Default: 4h
    Description: "How long does mail remain undelivered before sending a
      warning update to the sender?"
    Type: String
  DisableServices:
    AllowedValues:
      - 01 none
      - 02 Disable PostGrey
      - 03 Disable PostGrey, ClamAV
      - 04 Disable PostGrey, ClamAV, SpamAssassin
      - 05 Disable PostGrey, ClamAV, SpamAssassin, TLS
      - 06 Disable PostGrey, ClamAV, SpamAssassin, TLS, SASL
      - 07 Disable PostGrey, ClamAV, SpamAssassin, TLS, SASL, Dovecot
      - 08 Configure all but start none
    Default: 01 none
    Description: To quote Flurdy, "Test early and frequently." If things
      don't Just Work, you can roll back to just a basic Postfix installation
      and start from there. Take a good read of
      http://flurdy.com/docs/postfix/#test.
    Type: String
  DisableSpamChecks:
    AllowedValues:
      - true
      - false
    Default: false
    Description: "Disable all spam checks (sets @bypass_spam_checks_maps =
      (1)). This can be useful if you're having a hard time just getting
      amavisd up and running and passing messages back and forth from
      postfix."
    Type: String
  DisableVirusChecks:
    AllowedValues:
      - true
      - false
    Default: false
    Description: "Disable all virus checks (sets @bypass_virus_checks_maps =
      (1)). This can be useful if you're having a hard time just getting
      amavisd up and running and passing messages back and forth from
      postfix."
    Type: String
  DNSZone:
    Description: 'The Route53 Hosted Zone that includes the mail server. This
      will be used for automatic authorization during the creation process for
      the LetsEncrypt SSL certificate, so it should match the domain of the
      primary mail server. For example, if you put "mx1.mail.example.com" as
      the name of the primary server, then this should be the Hosted Zone ID
      for the "mail.example.com" zone.'
    Type: List<AWS::Route53::HostedZone::Id>
  PrimaryServerName:
    AllowedPattern: ^([a-z0-9]+(-[a-z0-9]+)*\.)+[a-z]{2,}$
    Default: 'mail.example.com'
    Description: 'The fully qualified domain name for the primary mail server.
      In addition to being put into /etc/mailname, this will also be used for
      the creation of a LetsEncrypt certificate, if you use LetsEncrypt, below.'
    Type: String
  SAFinalDest:
    AllowedValues:
      - D_PASS
      - D_BOUNCE
      - D_DISCARD
      - D_REJECT
    Default: D_DISCARD
    Description: Sets final_spam_destiny variable. The Debian default is
      D_BOUNCE; the Ubuntu default is D_DISCARD, which is recommended, as
      bouncing leads to backscatter and the sender is usually faked anyhow.
      The package that installs here defaults to D_REJECT.
      Setting it to D_PASS is useful for testing, as you can still run
      mail through SpamAssassin, get the headers attached, but not filter
      the message.
    Type: String
  SAKillLevelDeflt:
    Default: 8.0
    Description: "Triggers spam evasive actions (e.g., blocks mail). Amavisd
      defaults to 6.9. Flurdy sets it to 8.0. You'll have to play around and
      see how much spam is getting through, vs. how many false positives
      you have."
    Type: Number
  SetMyHost:
    AllowedValues:
      - true
      - false
    Default: false
    Description: "AmavisD has two variables, myhost and mydomain, which
      get inserted into mail headers. By default, those values are
      host.example.com and example.com, respectively. If you set this to
      true, then those defaults will be changed to the host and domain
      you configured as the primary server name, above."
    Type: String
  SSLDebug:
    AllowedValues:
      - true
      - false
    Default: false
    Description: "Set the --debug flag for acme.sh, which may prove useful
      if you're having trouble getting an SSL cert."
    Type: String
  VirtualUID:
    Default: 5000
    Description: The UID to be assigned to the user "virtual" which owns all
      mailboxes on the system. Note, we can't conveniently assign a GID with
      CloudFormation, so unlike Flurdy where that is also 5000, the GID
      for the virtual group will be assigned by the system.
    Type: Number
  DatabaseStackName:
    AllowedPattern: ^([a-zA-Z0-9]+[a-zA-Z0-9\-]*)$
    ConstraintDescription: "A stack name can contain only alphanumeric
      characters (case-sensitive) and hyphens. It must start with an
      alphabetic character and can't be longer than 128 characters."
    Description: The name of the stack that was used to create the RDS instances
    MaxLength: 128
    Type: String
  ExternalTestEmail:
    Default: ''
    Description: If "insert test data" is enabled, mail for test user
      karl@example.com will be set to forward to the email address you input
      here.
    Type: String
  MailAMIID:
    Default: '/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2'
    Description: AMI ID to use for the mail servers
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
  MailDBUser:
    AllowedPattern: ^([a-zA-Z0-9]*)$
    Description: The MySQL username to have access to the mail database.
    ConstraintDescription: 'Must contain only alphanumeric characters and be at
      least 8 characters.'
    MaxLength: 16
    MinLength: 8
    Type: String
  MailDBPassword:
    AllowedPattern: ^([a-z0-9A-Z`~!#$%^&*()_+,\\-])*$
    ConstraintDescription: "Must be between 8 and 41 characters, including
      letters (upper or lower), numbers, and these special characters
      '_'`~!#$%^&*()_+,-"
    Description: The MySQL password for the mail-database user.
    MaxLength: 41
    MinLength: 8
    NoEcho: true
    Type: String
  MailDBName:
    AllowedPattern: ^([a-zA-Z0-9]*)$
    Description: The MySQL mail database name.
    Type: String
  MaxUserConnections:
    Default: 25
    Description: The maximum number of IMAP connections allwed for a user
      from each IP address. Dovecot default is 10, but Jon Jerome's guide
      says, "Some clients open up more user connections at once than you
      might think.... If your email client gets random failures to connect
      during a session, especially a webmail client like Roundcube, try
      increasing this value."
    Type: Number
  EC2KeyName:
    AllowedPattern: ^([a-zA-Z0-9 @.`~!#$%^&*()_+,\\-])*$
    ConstraintDescription: 'Must be letters (upper or lower), numbers, and
      special characters.'
    Description: 'Name of an EC2 KeyPair. Your mail instances will launch with
      this KeyPair.'
    Type: AWS::EC2::KeyPair::KeyName
  HardErrLimit:
    Default: 20
    Description: smtpd_hard_error_limit The maximal number of errors
      a remote SMTP client is allowed to make without delivering
      mail. The Postfix SMTP server disconnects when the limit is
      exceeded.  Normally the default limit is 20, but it changes
      under overload to just 1.
    Type: Number
  HeloTimeout:
    Default: 60s
    Description: smtp_helo_timeout The Postfix SMTP client time
      limit for sending the HELO or EHLO command, and for receiving
      the initial remote SMTP server response. The Postfix default
      is 300s. Flurdy changes this to 60s. Not sure why, but it seems to work
      for us. The default time unit is s (seconds).
    Type: String
  InetProtocols:
    AllowedValues:
      - ipv4
      - ipv6
      - all
    Default: ipv4
    Description: Support for IPv4 or IPv6. Postfix default config has "all",
      but Flurdy sets it to IPv4, to avoid flooding logswith IPv6 errors. We
      haven't tested anything other than "ipv4".
    Type: String
  InsertTestData:
    AllowedValues:
      - true
      - false
    Default: false
    Description: "Add test users and domains to database. This is useful for
      testing. The model is similar to the samle data provided at flurdy.
      Three users are created: xandros@example.com, vivita@example,com, and
      karl@example.com. example.com and example.net are both created as
      domains, and all mail for example.net is forwarded to
      xandros@example.com. All mail for karl@example.com is forwarded to an
      external email you specify."
    Type: String
  MailInstanceType:
    AllowedValues:
      - t2.nano
      - t2.micro
      - t2.small
      - t2.medium
      - t2.large
    ConstraintDescription: Must be a valid Amazon EC2 instance type.
    Default: t2.micro
    Description: The Amazon EC2 instance type for your web instances.
    Type: String
  MailSecurityGroup:
    Description: Select the mail security group.
    Type: AWS::EC2::SecurityGroup::Id
  MaxBackoffTime:
    Default: 4000s
    Description: maximal_backoff_time The maximal time between attempts to
      deliver a deferred message. The default time unit is s (seconds).
      Time units are s (seconds), m (minutes), h (hours), d (days), w (weeks).
    Type: String
  MaxQueueLifetime:
    Default: 5d
    Description: maximal_queue_lifetime How long to keep messages
      on queue before returning as failed.  Five days is pretty
      normal, but there's nothing wrong with adjusting it up or
      down if you have reason (e.g., your serving mail for people
      who often go away for a week at a time and leave their server
      off). Specify 0 when mail delivery should be tried only once.
      Time units are s (seconds), m (minutes), h (hours), d (days), w (weeks).
    Type: String
  MinBackoffTime:
    Default: 300s
    Description: minimal_backoff_time The minimal time between attempts to
      deliver a deferred message. The default time unit is s
      (seconds).
      Time units are s (seconds), m (minutes), h (hours), d (days), w (weeks).
    Type: String
  MirovoyCFAssetsBucket:
    AllowedPattern: "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$"
    ConstraintDescription: 'Mirovoy CloudFront Assets Bucket name can include
      numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot
      start or end with a hyphen (-).'
    Default: "mirovoy-cf-assets"
    Description: 'S3 bucket name for the Mirovoy CloudFormation assets.'
    Type: String
  MYS3KeyPrefix:
    AllowedPattern: "^([0-9a-zA-Z-]+/)*$"
    ConstraintDescription: 'Mirovoy CloudFront Assets S3 bucket  key prefix
      can include numbers, lowercase letters, uppercase letters, hyphens (-),
      and forward slash (/). The prefix should end with a forward slash (/).'
    Default: "mail/"
    Description: 'S3 key prefix for the Mirovoy CloudFormation assets. This
      should be the top-level directory path inside the bucket, leading to the
      assets for this template (e.g., scripts directory, etc... are located)'
    Type: String
  Origin:
    AllowedValues:
      - domain
      - host
    Default: domain
    Description: myorigin For unix users on this machine posting
      mail, what to append to the username? The full hostname or
      the domain name?  Probably the domain name, but keep in mind
      that this will be weird for root@
    Type: String
  RelayHost:
    Default: ''
    Description: "Leave blank if this mail server sends all outbound mail. If
      you need to relay, e.g., through your ISP's server, enter that here."
    Type: String
  SkelFileDir:
    Default: "var/skel/"
    Description: "Path under S3 prefix for Banner text to put in the
      alternate admin user's home dir, via /etc/skel/. Should end in a slash."
    Type: String
  RecipientLimit:
    Default: 50
    Description: smtpd_recipient_limit The maximal number of
      recipients that the Postfix SMTP server accepts per message
      delivery request. The actual Postfix default is 1000; Flurdy
      changes it to 16 because "effective stopper to mass spammers,
      accidental copy in whole address list", but we find we regularly
      send to more than 16 recipients in a single message.
    Type: String
  RootMailRecipient:
    Description: The recipient for local root mail. It can be a
      user on this machine (e.g., the user added as AltAdmin above),
      in which case you'll need to log into the machine locally and
      get check your mail periodically. Or, it can be a real email
      address; or better, a real email distribution list (e.g.,
      sysadmins@example.com) that goes to people who will read such
      messages.
    Type: String
  SoftErrLimit:
    Default: 3
    Description: smtpd_soft_error_limit The number of errors a
      remote SMTP client is allowed to make without delivering mail
      before the Postfix SMTP server slows down all its responses.
      The Postfix default is 10, and you may want to set it to that,
      or even higher, while you're testing your deployment, so you
      don't get slowed down, but once things are working properly
      you should definitely come lower it
    Type: Number
  StorageStackName:
    AllowedPattern: ^([a-zA-Z0-9]+[a-zA-Z0-9\-]*)$
    ConstraintDescription: "A stack name can contain only alphanumeric
      characters (case-sensitive) and hyphens. It must start with an
      alphabetic character and can't be longer than 128 characters."
    Description: The name of the stack that was used to create EBS volumes
    MaxLength: 128
    Type: String
  PrimarySubnet:
    Description: 'Subnet in which to place the primary mail server.'
    Type: List<AWS::EC2::Subnet::Id>
  BackupSubnet:
    Description: 'Subnet in which to place the backup mail server.'
    Type: List<AWS::EC2::Subnet::Id>
  UnknownLocalErrorCode:
    AllowedValues:
      - 450
      - 550
    Default: 550
    Description: What code to send if local lookup on an address fails. Should
      be 550 (reject mail), but is often worth setting to 450 (try again later)
      while you make sure your local_recipient_maps settings are OK.
    Type: Number
  UseSwap:
    AllowedValues:
      - true
      - false
    Default: true
    Description: Use a volume created by the storage template for swap
    Type: String
  VivitaPass:
    Default: ''
    Description: If insert test data is enabled, this will be the password
      for test user "vivita".
    Type: String
  XandrosPass:
    Default: ''
    Description: If insert test data is enabled, this will be the password
      for test user "xandros".
    Type: String

Conditions:
  ADDebug:
    !Equals [!Ref ADLogLevel, 2]
  ADDomain:
    !Equals [!Ref SetMyHost, true]
  ADVirusOff:
    !Equals [!Ref DisableVirusChecks, true]
  ADSpamOff:
    !Equals [!Ref DisableSpamChecks, true]
  DefaultBanner:
    !Equals [!Ref Banner, '$myhostname ESMTP $mail_name']
  DomainOrigin:
    !Equals [!Ref Origin, 'domain']
  DontStart:
    !Equals [!Ref DisableServices, '08 Configure all but start none']
  DownloadCerts:
    !Equals [!Ref CertSource, 'S3']
  EnableDovecot:
    !Or
    - Condition: DontStart
    - !Not [!Equals
            [!Ref DisableServices,
             '07 Disable PostGrey, ClamAV, SpamAssassin, TLS, SASL, Dovecot']]
  EnableSASL:
    !Or
    - Condition: DontStart
    - !And
      - Condition: EnableDovecot
      - !Not [!Equals
              [!Ref DisableServices,
               '06 Disable PostGrey, ClamAV, SpamAssassin, TLS, SASL']]
  EnableTLS:
    !Or
    - Condition: DontStart
    - !And
      - Condition: EnableSASL
      - !Not [!Equals
              [!Ref DisableServices,
               '05 Disable PostGrey, ClamAV, SpamAssassin, TLS']]
  EnableSpamAssassin:
    !Or
    - Condition: DontStart
    - !And
      - Condition: EnableTLS
      - !Not [!Equals
              [!Ref DisableServices,
               '04 Disable PostGrey, ClamAV, SpamAssassin']]
  EnableClamAV:
    !Or
    - Condition: DontStart
    - !And
      - Condition: EnableSpamAssassin
      - !Not [!Equals [!Ref DisableServices, '03 Disable PostGrey, ClamAV']]
  EnablePostGrey:
    !Or
    - Condition: DontStart
    - !And
      - Condition: EnableClamAV
      - !Not [!Equals [!Ref DisableServices, '02 Disable PostGrey']]
  GetSSLTest:
    !Equals [!Ref CertSource, 'generate test']
  GetSSLReal:
    !Equals [!Ref CertSource, 'generate real']
  NoAdminUser:
    !Equals [!Ref AdminUser, '']
  SetAccountEmail:
    !Not [!Equals [!Ref AccountEmail, '']]
  SetSSLDebug:
    !Equals [!Ref SSLDebug, true]
  SwapOn:
    !Equals [!Ref UseSwap, true]
  UseTestData:
    !Equals [!Ref InsertTestData, true]

Resources:
  MailInstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /

  MailInstancePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: MailPolicy
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          -
            Effect: Allow
            Action:
              - s3:GetObject
            Resource: !Sub
              arn:aws:s3:::${MirovoyCFAssetsBucket}/${MYS3KeyPrefix}*
          -
            Effect: Allow
            Action:
              - secretsmanager:GetSecretValue
            Resource: !Join
              - ''
              - - !Sub "arn:aws:secretsmanager:${AWS::Region}:"
                - !Sub "${AWS::AccountId}:secret:${DatabaseStackName}"
                - "-dbcreds-??????"
          -
            Effect: Allow
            Action:
              - route53:ListHostedZones
            Resource: "*"
          -
            Effect: Allow
            Action:
              - route53:ChangeResourceRecordSets
              - route53:GetHostedZone
              - route53:ListResourceRecordSets
            Resource:
              !Sub
              - "arn:aws:route53:::hostedzone/${MyZone}"
              - {MyZone: !Select [0, !Ref DNSZone]}
          -
            Effect: Allow
            Action:
              - ec2:AssociateAddress
              - ec2:DescribeAddress
            Resource: "*"
          -
            Effect: Allow
            Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
              - logs:DescribeLogStreams
            Resource: arn:aws:logs:*:*:*
      Roles:
        -
          !Ref MailInstanceRole

  MailInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        -
          !Ref MailInstanceRole

  MailServerInstance:
    Type: AWS::EC2::Instance
    Metadata:
      Comment: Install the primary mail server
      AWS::CloudFormation::Authentication:
        S3AccessCreds:
          type: "S3"
          buckets: [!Ref MirovoyCFAssetsBucket]
          roleName: !Ref MailInstanceRole
      AWS::CloudFormation::Init:
        configSets:
          have_swap:
            - mount_swap
          insert_test_data:
            - add_test
          deploy_baseserver:
            - mount_log
            - mount_spool
            - add_mysql
            - config_mysql
            - install_mailserver
          deploy_with_alt_admin:
            - add_admin
            -
              ConfigSet: "deploy_baseserver"
          # 01 The Kitchen Sink
          config_01:
            -
              ConfigSet: "config_02"
            - config_postgrey
            - restart_postfix
          # 02 Disable PostGrey
          config_02:
            -
              ConfigSet: "config_03"
            - config_clamav
            - restart_amavis
            - restart_postfix
          # 03 Disable PostGrey, ClamAV
          config_03:
            -
              ConfigSet: "config_04"
            # EPEL is where PostGrey, ClamAV, and SpamAssasin packages are,
	    # so this is the first time we need it
            - add_epel
            - config_amavisd
          # 04 Disable PostGrey, ClamAV, SpamAssassin
          config_04:
            - get_acmesh
            -
              ConfigSet: "config_05"
            - config_tls
          # 05 Disable PostGrey, ClamAV, SpamAssassin, TLS
          config_05:
            -
              ConfigSet: "config_06"
            - config_dovecot_sasl
          # 06 Disable PostGrey, ClamAV, SpamAssassin, TLS, SASL
          config_06:
            -
              ConfigSet: "config_07"
            - config_dovecot
          # 07 Disable PostGrey, ClamAV, SpamAssassin, TLS, SASL, Dovecot
          config_07:
            - config_postfix

        add_admin:
          packages:
            yum:
              ksh: []
          files:
            /tmp/profile:
              source: !Join
                - ''
                - - https://
                  - !Sub ${MirovoyCFAssetsBucket}.s3-${AWS::Region}
                  - !Sub .amazonaws.com/${MYS3KeyPrefix}${SkelFileDir}profile
              mode: "000600"
              owner: "root"
              group: "root"
              authentication: S3AccessCreds
            /tmp/shrc:
              source: !Join
                - ''
                - - !Sub https://${MirovoyCFAssetsBucket}.s3-
                  - !Sub ${AWS::Region}.amazonaws.com/
                  - !Sub ${MYS3KeyPrefix}${SkelFileDir}shrc
              mode: "000600"
              owner: "root"
              group: "root"
              authentication: S3AccessCreds
            /tmp/adminpubkey.pub:
              content: !Ref AdminPubKey
              mode: "000600"
              owner: "root"
              group: "root"
          commands:
            # add skeleton files
            01_add_profile:
              command: "mv /tmp/profile /etc/skel/.profile"
              test: "test -e /tmp/profile"
            02_add_shrc:
              command: "mv /tmp/shrc /etc/skel/.shrc"
              test: "test -e /tmp/shrc"
            # add user
            03_add_user:
              command: !Join
                - ''
                - - "/usr/sbin/useradd -G adm,wheel,systemd-journal "
                  - "-s /usr/bin/ksh "
                  - !Ref AdminUser
              test: !Join
                - ''
                - - "test ! `/usr/bin/id -u "
                  - !Ref AdminUser
                  - " > /dev/null 2>&1`"
            # install ssh key
            04_put_pub_key_for_ec2_user:
              command: !Join
                - ''
                - - "cat /tmp/adminpubkey.pub >> "
                  - /home/ec2-user/.ssh/authorized_keys
              test: "test -e /tmp/adminpubkey.pub"
            05_create_ssh_dir:
              command: "mkdir .ssh"
              cwd: !Sub /home/${AdminUser}
              test: "test ! -e .ssh"
            06_add_to_auth_keys:
              command: "cat /tmp/adminpubkey.pub >> .ssh/authorized_keys"
              cwd: !Sub /home/${AdminUser}
              test: "test -e /tmp/adminpubkey.pub"
            07_chown:
              command: !Sub chown -R ${AdminUser}:${AdminUser} .ssh
              cwd: !Sub /home/${AdminUser}
              test: "test -e .ssh"
            08_set_dir_perm:
              command: "chmod 700 .ssh"
              cwd: !Sub /home/${AdminUser}
              test: "test -e .ssh"
            09_set_auth_keys_perm:
              command: "chmod 600 .ssh/authorized_keys"
              cwd: !Sub /home/${AdminUser}
              test: "test -e .ssh/authorized_keys"
            # enable sudo without password
            10_allow_sudo:
              command: !Join
                - ''
                - - !Sub echo ${AdminUser} ALL=\(ALL\) NOPASSWD:ALL
                  - " >>/etc/sudoers.d/cloud-init"
              test: !Join
                - ''
                - - "test ! `grep "
                  - !Ref AdminUser
                  - " /etc/sudoers.d/cloud-init >/dev/null 2>&1`"

        add_test:
          files:
            /tmp/test.mysql:
              content: !Sub |
                USE ${MailDBName};
                REPLACE INTO domains (domain) VALUES
                        ('example.com'),
                        ('example.net');
                REPLACE INTO aliases (mail,destination) VALUES
                        ('@mail.examle.com','@example.com'),
                        ('postmaster@example.net','postmaster@localhost'),
                        ('abuse@example.net','abuse@localhost'),
                        ('postmaster@example.com','postmaster@localhost'),
                        ('abuse@example.com','abuse@localhost');
                REPLACE INTO users (id,name,maildir,crypt) VALUES
                        ('xandros@example.com','xandros','example.com/xandros/',
                            SHA2('${XandrosPass}', 256)),
                        ('vivita@example.com','vivita','example.com/vivita/',
                            SHA2('${VivitaPass}', 256));
                REPLACE INTO aliases (mail,destination) VALUES
                        ('xandros@example.com','xandros@example.com'),
                        ('vivita@example.com','vivita@example.com'),
                        ('@example.net','xandros@example.com'),
                        ('karl@example.com','${ExternalTestEmail}');
              mode: "000400"
              owner: "root"
              group: "root"
          commands:
            01_insert_data:
              command: !Join
                - ''
                - - "mysql -u "
                  - !Ref MailDBUser
                  - " --password='"
                  - !Ref MailDBPassword
                  - "' -h "
                  - Fn::ImportValue: !Sub
                      '${DatabaseStackName}-MasterDBEndpoint'
                  - " </tmp/test.mysql"
              test: !Join
                - ''
                - - "$(mysql -u "
                  - !Ref MailDBUser
                  - " --password='"
                  - !Ref MailDBPassword
                  - "' -h "
                  - Fn::ImportValue: !Sub
                      '${DatabaseStackName}-MasterDBEndpoint'
                  - " >/dev/null 2>&1 </dev/null)"

        add_epel:
          commands:
            01_enable_epel:
              command: amazon-linux-extras enable epel
              test: "! yum repolist enabled | grep epel"
            02_clean_yum_metadata:
              command: yum clean metadata
              test: "yum repolist enabled | grep amzn2extra-epel"
            03_install_epel:
              command: yum install -y epel-release
              test: "! yum repolist enabled | grep ^\\*epel"

        mount_swap:
          commands:
            01_wait_for_volume:
              command: !Join
                - ''
                - - "while [ ! -e /dev/xvdm ]; "
                  - "do echo Waiting for EBS volume to attach; sleep 5; done"
            02_make_swap:
              command: "mkswap /dev/xvdm"
              test: '! /usr/sbin/blkid | grep /dev/xvdm.*TYPE=\"swap\"'
            03_swap_on:
              command: "/usr/sbin/swapon /dev/xvdm"
              test: "! /usr/sbin/swapon --show | grep /dev/xvdm"
            04_persist_swap:
              command: !Join
                - ''
                - - "echo UUID=`/usr/sbin/blkid | grep /dev/xvdm "
                  - "| grep -o UUID.*[[:blank:]] "
                  - "| cut -f2 -d\\\"` swap swap defaults 0 0"
                  - " >>/etc/fstab"
              test: !Join
                - ''
                - - "! grep `/usr/sbin/blkid | grep /dev/xvdm "
                  - "| grep -o UUID.*[[:blank:]] "
                  - "| cut -f2 -d\\\"` /etc/fstab"

        mount_log:
          files:
            /tmp/journald.conf:
              content: !Sub |
                [Journal]
                Storage=volatile
              mode: "000644"
              owner: "root"
              group: "root"
          commands:
            01_save_journal_conf:
              command: "mv journald.conf journald.save"
              cwd: /etc/systemd
              test: "test -f journald.conf"
            02_conf_journal:
              command: "mv /tmp/journald.conf ."
              cwd: /etc/systemd
              test: "test -f /tmp/journald.conf"
            03_reload_journal:
              command: "systemctl force-reload systemd-journald"
              test: "systemctl is-active systemd-journald"
            04_touch_audit:
              command: "mkdir /tmp/audit"
              test: "test ! -d /tmp/audit"
            05_restrict_audit_dir:
              command: "chmod 700 /tmp/audit"
              test: "test -d /tmp/audit"
            06_conf_audit:
              command: "sed -i 's;/var/log;/tmp;' auditd.conf"
              cwd: /etc/audit
              test: "grep /var/log auditd.conf"
            # systemctl and reload don't work on auditd
            07_restart_audit:
              command: "service auditd restart"
              test: "systemctl is-active auditd"
            08_mv_var_log:
              command: "mv /var/log /tmp"
              test: "test ! -e /tmp/log"
            09_format_log_vol:
              command: "mkfs -t xfs /dev/xvdl"
              test: '[ "`lsblk -no FSTYPE /dev/xvdl`" != "xfs" ]'
            10_mk_mount_pt:
              command: "mkdir /var/log"
              test: "test ! -e /var/log"
            11_mount_log:
              command: "mount /dev/xvdl /var/log"
              test: "test -e /var/log"
            12_persist_log:
              command: !Join
                - ''
                - - "echo UUID=`/usr/sbin/blkid | grep /dev/xvdl "
                  - "| grep -o UUID.*[[:blank:]] "
                  - "| cut -f2 -d\\\"` /var/log xfs defaults,nofail 0 2"
                  - " >>/etc/fstab"
              test: !Join
                - ''
                - - "! grep `/usr/sbin/blkid | grep /dev/xvdl "
                  - "| grep -o UUID.*[[:blank:]] "
                  - "| cut -f2 -d\\\"` /etc/fstab"
            13_restore_logs:
              command: "rsync -az /tmp/log /var/"
              test: "test -d /var/log"
            14_conf_audit:
              command: "sed -i 's;/tmp;/var/log;' auditd.conf"
              cwd: /etc/audit
              test: "grep /tmp auditd.conf"
            15_restart_audit:
              command: "service auditd restart"
              test: "systemctl is-active auditd"
            16_restore_journal_conf:
              command: "mv journald.save journald.conf"
              cwd: /etc/systemd
              test: "test -f journald.save"
            17_reload_journal:
              command: "systemctl force-reload systemd-journald"
              test: "systemctl is-active systemd-journald"
            18_reload_amazon_ssm:
              command: "systemctl force-reload amazon-ssm-agent"
              test: "systemctl is-active amazon-ssm-agent"
            19_reload_syslog:
              command: "systemctl force-reload rsyslog"
              test: "systemctl is-active rsyslog"

        mount_spool:
          commands:
            01_stop_postfix:
              command: "systemctl stop postfix"
              test: "systemctl is-active postfix"
            02_stop_atd:
              command: "systemctl stop atd"
              test: "systemctl is-active atd"
            03_mv_var_spool:
              command: "mv /var/spool /tmp"
              test: "test ! -e /tmp/spool"
            04_format_spool_vol:
              command: "mkfs -t xfs /dev/xvds"
              test: '[ "`lsblk -no FSTYPE /dev/xvds`" != "xfs" ]'
            05_mk_mount_pt:
              command: "mkdir /var/spool"
              test: "test ! -e /var/spool"
            06_mount_spool:
              command: "mount /dev/xvds /var/spool"
              test: "test -e /var/spool"
            07_persist_spool:
              command: !Join
                - ''
                - - "echo UUID=`/usr/sbin/blkid | grep /dev/xvds "
                  - "| grep -o UUID.*[[:blank:]] "
                  - "| cut -f2 -d\\\"` /var/spool xfs defaults,nofail 0 2"
                  - " >>/etc/fstab"
              test: !Join
                - ''
                - - "! grep `/usr/sbin/blkid | grep /dev/xvds "
                  - "| grep -o UUID.*[[:blank:]] "
                  - "| cut -f2 -d\\\"` /etc/fstab"
            08_restore_spool:
              command: "rsync -az /tmp/spool /var/"
              test: "test -d /var/spool"
            09_start_atd:
              command: "systemctl start atd"
              test: "systemctl is-enabled atd"

        add_mysql:
          files:
            /tmp/mysql80.rpm:
              source: !Join
                - ''
                - - https://dev.mysql.com/get/
                  - mysql80-community-release-el7-2.noarch.rpm
              mode: "000600"
              owner: "root"
              group: "root"
          commands:
            01_install_repo:
              command: "yum -y localinstall mysql80.rpm"
              cwd: /tmp
              test: "test -e /tmp/mysql80.rpm"
            02_install_mysql_client:
              command: "yum -y install mysql-community-client"
              test: "yum repolist enabled | grep mysql"

        config_mysql:
          #
          # There doesn't appear to currently be a way to create group with
          # the same name as a user and to assign it an ID. When you specify
          # users here, the command automatically creates a group of the same
          # name, and lets the system pick the GID. If you try and create a
          # group, or to assign a group of the same name as part of the user
          # block, cfn-init fails. So, for example, we can't specify
          # VirtualUID = 5000, VirtualGID = 5000, and create a user and group
          # with those IDs. Since we need the GID early (to include here
          # in the MySQL configuration), we create the user "virtual", and
          # assign it the UID we want. At the same time, the group "virtual"
          # is created, but we don't know the ID, so we place the token
          # VIRTUALGID in the file, and swap it out with sed after the user
          # is created.
          #
          users:
            virtual:
              uid: !Ref VirtualUID
          files:
            /tmp/setup.mysql:
              content: !Sub |
                CREATE DATABASE IF NOT EXISTS ${MailDBName};
                CREATE USER IF NOT EXISTS '${MailDBUser}'@'%'
                IDENTIFIED by '${MailDBPassword}';
                GRANT SELECT,INSERT,UPDATE,DELETE,CREATE,DROP
                ON ${MailDBName}.* TO '${MailDBUser}'@'%';
              mode: "000400"
              owner: "root"
              group: "root"
            /tmp/tables.mysql:
              content: !Sub |
                USE ${MailDBName};
                CREATE TABLE IF NOT EXISTS `aliases` (
                `pkid` smallint(3) NOT NULL auto_increment,
                `mail` varchar(120) NOT NULL default '',
                `destination` varchar(120) NOT NULL default '',
                `enabled` tinyint(1) NOT NULL default '1',
                PRIMARY KEY  (`pkid`),
                UNIQUE KEY `mail` (`mail`)
                ) ;
                CREATE TABLE IF NOT EXISTS `domains` (
                `pkid` smallint(6) NOT NULL auto_increment,
                `domain` varchar(120) NOT NULL default '',
                `transport` varchar(120) NOT NULL default 'virtual:',
                `enabled` tinyint(1) NOT NULL default '1',
                PRIMARY KEY  (`pkid`),
                UNIQUE KEY `domain` (`domain`)
                ) ;
                CREATE TABLE IF NOT EXISTS `users` (
                `id` varchar(128) NOT NULL default '',
                `name` varchar(128) NOT NULL default '',
                `uid` smallint(5) unsigned NOT NULL default '${VirtualUID}',
                `gid` smallint(5) unsigned NOT NULL default 'VIRTUALGID',
                `home` varchar(255) NOT NULL default '/var/spool/mail/virtual',
                `maildir` varchar(255) NOT NULL default 'blah/',
                `enabled` tinyint(1) NOT NULL default '1',
                `change_password` tinyint(1) NOT NULL default '1',
                `clear` varchar(128) NOT NULL default 'ChangeMe',
                `crypt` varchar(128) NOT NULL default 'sdtrusfX0Jj66',
                `quota` varchar(255) NOT NULL default '',
                PRIMARY KEY  (`id`),
                UNIQUE KEY `id` (`id`)
                ) ;
              mode: "000400"
              owner: "root"
              group: "root"
            /tmp/required.mysql:
              content: !Sub |
                USE ${MailDBName};
                REPLACE INTO domains (domain) VALUES
                        ('localhost'),
                        ('localhost.localdomain');
                REPLACE INTO aliases (mail,destination) VALUES
                        ('postmaster@localhost','root@localhost'),
                        ('sysadmin@localhost','root@localhost'),
                        ('webmaster@localhost','root@localhost'),
                        ('abuse@localhost','root@localhost'),
                        ('root@localhost','root@localhost'),
                        ('@localhost','root@localhost'),
                        ('@localhost.localdomain','@localhost');
              mode: "000400"
              owner: "root"
              group: "root"
          commands:
            01_create_mail_db:
              command: !Join
                # The aws CLI query to get the secrets from the Secrets
                # Manager are a little gross here. OK, a lot gross — because
                # the actual SecretString returns a String, not an object
                # that is further queryiable with JMESPath. For example
                # it might output
                #
                # {"user":"secretuser", "password":"secretpass"}
                #
                # the above could be further queried by jq ... but jq isn't
                # installed be default, whereas grep is, so we do this the
                # old fashioned way. grep.
                - ''
                - - "mysql -u "
                  - !Sub "`aws --region ${AWS::Region} secretsmanager "
                  - "get-secret-value --secret-id "
                  - !Sub "${DatabaseStackName}-dbcreds "
                  - "--query SecretString --output text | grep -Po "
                  - "'user\":\"\\K.*?(?=\")'` "
                  - "--password="
                  - !Sub "`aws --region ${AWS::Region} secretsmanager "
                  - "get-secret-value --secret-id "
                  - !Sub "${DatabaseStackName}-dbcreds "
                  - "--query SecretString --output text | grep -Po "
                  - "'password\":\"\\K.*?(?=\")'` -h "
                  - Fn::ImportValue: !Sub ${DatabaseStackName}-MasterDBEndpoint
                  - " </tmp/setup.mysql"
              test: !Join
                - ''
                - - "! $(mysql -u "
                  - !Ref MailDBUser
                  - " --password='"
                  - !Ref MailDBPassword
                  - "' -h "
                  - Fn::ImportValue: !Sub
                      '${DatabaseStackName}-MasterDBEndpoint'
                  - " >/dev/null 2>&1 </dev/null)"
            02_vgid_tables:
              command: sed -i "s/VIRTUALGID/`id -g virtual`/" /tmp/tables.mysql
              cwd: /tmp
              test: test -f /tmp/tables.mysql
            03_create_tables:
              command: !Join
                - ''
                - - "mysql -u "
                  - !Ref MailDBUser
                  - " --password='"
                  - !Ref MailDBPassword
                  - "' -h "
                  - Fn::ImportValue: !Sub
                      '${DatabaseStackName}-MasterDBEndpoint'
                  - " </tmp/tables.mysql"
              test: !Join
                - ''
                - - "$(mysql -u "
                  - !Ref MailDBUser
                  - " --password='"
                  - !Ref MailDBPassword
                  - "' -h "
                  - Fn::ImportValue: !Sub
                      '${DatabaseStackName}-MasterDBEndpoint'
                  - " >/dev/null 2>&1 </dev/null)"
            04_required_domains_and_users:
              command: !Join
                - ''
                - - "mysql -u "
                  - !Ref MailDBUser
                  - " --password='"
                  - !Ref MailDBPassword
                  - "' -h "
                  - Fn::ImportValue: !Sub
                      '${DatabaseStackName}-MasterDBEndpoint'
                  - " </tmp/required.mysql"
              test: !Join
                - ''
                - - "$(mysql -u "
                  - !Ref MailDBUser
                  - " --password='"
                  - !Ref MailDBPassword
                  - "' -h "
                  - Fn::ImportValue: !Sub
                      '${DatabaseStackName}-MasterDBEndpoint'
                  - " >/dev/null 2>&1 </dev/null)"

        get_acmesh:
          sources:
            /tmp/acmesh: https://github.com/Neilpang/acme.sh/tarball/master
          commands:
            01_install_acmesh:
              command: !Join
                - ' '
                - - ./acme.sh --install --home /usr/local/sbin
                  - --config-home /etc/acmesh
                  - Fn::If:
                    - SetAccountEmail
                    - Fn::Join:
                      - ' '
                      - - --accountemail
                        - !Ref AccountEmail
                    - ''
              cwd: /tmp/acmesh
            02_issue_ssl_cert:
              command: !Join
                - ' '
                - - acme.sh
                  - Fn::If:
                    - SetSSLDebug
                    - --debug
                    - ''
                  - Fn::If:
                    - GetSSLTest
                    - --test
                    - ''
                  - --config-home /etc/acmesh
                  - --issue -d
                  - !Ref PrimaryServerName
                  - --dns dns_aws
            03_install_ssl_cert:
              command: !Join
                - ' '
                - - acme.sh
                  - Fn::If:
                    - SetSSLDebug
                    - --debug
                    - ''
                  - --config-home /etc/acmesh
                  - --install-cert -d
                  - !Ref PrimaryServerName
                  - --cert-file
                  - Fn::Join:
                    - ''
                    - - /etc/pki/dovecot/certs/
                      - !Ref PrimaryServerName
                      - .cert.pem
                  - --fullchain-file
                  - Fn::Join:
                    - ''
                    - - /etc/pki/dovecot/certs/
                      - !Ref PrimaryServerName
                      - .chain.pem
                  - --key-file
                  - Fn::Join:
                    - ''
                    - - /etc/pki/dovecot/private/
                      - !Ref PrimaryServerName
                      - .key

        install_mailserver:
          packages:
            yum:
              awslogs: []
              postfix: []
              dovecot: []
              dovecot-mysql: []
          files:
            /etc/cfn/cfn-hup.conf:
              content: !Sub |
                [main]
                stack=${AWS::StackId}
                region=${AWS::Region}
              mode: "000400"
              owner: "root"
              group: "root"
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              content: !Join
                - ''
                - - |-
                    [cfn-auto-reloader-hook]
                    triggers=post.update
                    path=Resources.MailServerInstance.Metadata.
                  - |-
                    AWS::CloudFormation::Init
                    action=/opt/aws/bin/cfn-init -v --stack
                  - ' '
                  - !Ref AWS::StackName
                  - ' --resource MailServerInstance --configsets '
                  - !If [NoAdminUser, deploy_baseserver, deploy_with_alt_admin]
                  - '  --region '
                  - !Ref AWS::Region
                  - |

                    runas=root
              mode: "000400"
              owner: "root"
              group: "root"
          commands:
            01_stay_secure:
              command: "echo 0 0 * * * yum -y update --security >> /etc/crontab"
              test: "! grep yum.*security /etc/crontab"
          services:
            sysvinit:
              cfn-hup:
                enabled: "true"
                ensureRunning: "true"
                files:
                  - "/etc/cfn/cfn-hup.conf"
                  - "/etc/cfn/hooks.d/cfn-auto-reloader.conf"

        config_postfix:
          files:
            /etc/mailname:
              content: !Ref PrimaryServerName
              mode: "000644"
              owner: "root"
              group: "root"
            /etc/postfix/mysql_mailbox.cf:
              content:
                Fn::Sub:
                  - |
                    user=${MailDBUser}
                    password=${MailDBPassword}
                    dbname=${MailDBName}
                    table=users
                    select_field=maildir
                    where_field=id
                    hosts=${RDSHost}
                    additional_conditions = and enabled = 1
                  - RDSHost:
                      Fn::ImportValue:
                        !Sub '${DatabaseStackName}-MasterDBEndpoint'
              mode: "000640"
              owner: "root"
              group: "postfix"
            /etc/postfix/mysql_alias.cf:
              content:
                Fn::Sub:
                  - |
                    user=${MailDBUser}
                    password=${MailDBPassword}
                    dbname=${MailDBName}
                    table=aliases
                    select_field=destination
                    where_field=mail
                    hosts=${RDSHost}
                    additional_conditions = and enabled = 1
                  - RDSHost:
                      Fn::ImportValue:
                        !Sub '${DatabaseStackName}-MasterDBEndpoint'
              mode: "000640"
              owner: "root"
              group: "postfix"
            /etc/postfix/mysql_domains.cf:
              content:
                Fn::Sub:
                  - |
                    user=${MailDBUser}
                    password=${MailDBPassword}
                    dbname=${MailDBName}
                    table=domains
                    select_field=domain
                    where_field=domain
                    hosts=${RDSHost}
                    additional_conditions = and enabled = 1
                  - RDSHost:
                      Fn::ImportValue:
                        !Sub '${DatabaseStackName}-MasterDBEndpoint'
              mode: "000640"
              owner: "root"
              group: "postfix"

            /tmp/postfix_tls.cf:
              content: !Sub |
                # TLS parameters
                # smtp_use_tls = no
                # smtpd_use_tls=yes
                smtpd_tls_security_level = may
                # smtpd_tls_auth_only = no
                #
                # Use log level 3 only in case of problems.
                # Use of log level 4 is strongly discouraged.
                smtpd_tls_loglevel = 1
                smtpd_tls_received_header = yes
                smtpd_tls_session_cache_timeout = 3600s
                tls_random_source = dev:/dev/urandom
                smtpd_tls_cert_file =
                    /etc/pki/dovecot/certs/${PrimaryServerName}.chain.pem
                smtpd_tls_key_file =
                    /etc/pki/dovecot/private/${PrimaryServerName}.key
                smtpd_tls_session_cache_database =
                    btree:/var/lib/postfix/smtpd_scache
                smtp_tls_session_cache_database =
                    btree:/var/lib/postfix/smtp_scache
                lmtp_tls_session_cache_database =
                    btree:/var/lib/postfix/lmtp_scache
              mode: "000640"
              owner: "postfix"
              group: "postfix"

            /tmp/postfix_extras.cf:
              content:
                !If
                - EnableSASL
                - !Sub |
                  #
                  # Added by cfn-init
                  # See http://flurdy.com/docs/postfix/#config for details
                  delay_warning_time = ${DelayWarningTime}
                  maximal_queue_lifetime = ${MaxQueueLifetime}
                  minimal_backoff_time = ${MinBackoffTime}
                  maximal_backoff_time = ${MaxBackoffTime}
                  smtp_helo_timeout = ${HeloTimeout}
                  smtpd_recipient_limit = ${RecipientLimit}
                  smtpd_soft_error_limit = ${SoftErrLimit}
                  smtpd_hard_error_limit = ${HardErrLimit}
                  smtpd_helo_restrictions = permit_mynetworks, warn_if_reject
                      reject_non_fqdn_hostname,
                      reject_invalid_hostname, permit
                  # smtpd_sender_restrictions = permit_mynetworks,
                      # warn_if_reject reject_non_fqdn_sender,
                      # reject_unknown_sender_domain,
                      # reject_unauth_pipelining,
                      # permit
                  smtpd_sender_restrictions = permit_sasl_authenticated,
                      permit_mynetworks,
                      warn_if_reject reject_non_fqdn_sender,
                      reject_unknown_sender_domain, reject_unauth_pipelining,
                      permit
                  smtpd_client_restrictions = reject_rbl_client
                      sbl.spamhaus.org,
                      reject_rbl_client blackholes.easynet.nl
                  # smtpd_recipient_restrictions = reject_unauth_pipelining,
                      # permit_mynetworks,
                      # reject_non_fqdn_recipient,
                      # reject_unknown_recipient_domain,
                      # reject_unauth_destination, permit
                  smtpd_recipient_restrictions = reject_unauth_pipelining,
                      permit_mynetworks, permit_sasl_authenticated,
                      reject_non_fqdn_recipient,
                      reject_unknown_recipient_domain,
                      reject_unauth_destination, permit
                  smtpd_data_restrictions = reject_unauth_pipelining
                  smtpd_delay_reject = yes
                  smtpd_helo_required = yes
                  smtpd_sasl_type = dovecot
                  smtpd_sasl_path = private/auth
                  smtpd_sasl_auth_enable = yes
                  broken_sasl_auth_clients = no
                  smtpd_sasl_local_domain =
                  smtpd_sasl_security_options = noanonymous
                  disable_vrfy_command = yes
                  virtual_mailbox_base = /var/spool/mail/virtual
                  virtual_mailbox_maps = mysql:/etc/postfix/mysql_mailbox.cf
                  virtual_alias_maps = mysql:/etc/postfix/mysql_alias.cf
                  virtual_mailbox_domains = mysql:/etc/postfix/mysql_domains.cf
                  virtual_mailbox_domains = mysql:/etc/postfix/mysql_domains.cf
                  virtual_uid_maps = static:${VirtualUID}
                  virtual_gid_maps = static:VIRTUALGID
                # not If EnableSASL
                - !Sub |
                  #
                  # Added by cfn-init
                  # See http://flurdy.com/docs/postfix/#config for details
                  delay_warning_time = ${DelayWarningTime}
                  maximal_queue_lifetime = ${MaxQueueLifetime}
                  minimal_backoff_time = ${MinBackoffTime}
                  maximal_backoff_time = ${MaxBackoffTime}
                  smtp_helo_timeout = ${HeloTimeout}
                  smtpd_recipient_limit = ${RecipientLimit}
                  smtpd_soft_error_limit = ${SoftErrLimit}
                  smtpd_hard_error_limit = ${HardErrLimit}
                  smtpd_helo_restrictions = permit_mynetworks, warn_if_reject
                      reject_non_fqdn_hostname, reject_invalid_hostname,
                      permit
                  smtpd_sender_restrictions = permit_mynetworks,
                      warn_if_reject reject_non_fqdn_sender,
                      reject_unknown_sender_domain, reject_unauth_pipelining,
                      permit
                  smtpd_client_restrictions = reject_rbl_client
                      sbl.spamhaus.org,
                      reject_rbl_client blackholes.easynet.nl
                  smtpd_recipient_restrictions = reject_unauth_pipelining,
                      permit_mynetworks,
                      reject_non_fqdn_recipient,
                      reject_unknown_recipient_domain,
                      reject_unauth_destination, permit
                  smtpd_data_restrictions = reject_unauth_pipelining
                  smtpd_delay_reject = yes
                  smtpd_helo_required = yes
                  disable_vrfy_command = yes
                  virtual_mailbox_base = /var/spool/mail/virtual
                  virtual_mailbox_maps = mysql:/etc/postfix/mysql_mailbox.cf
                  virtual_alias_maps = mysql:/etc/postfix/mysql_alias.cf
                  virtual_mailbox_domains =
                      mysql:/etc/postfix/mysql_domains.cf
                  virtual_mailbox_domains =
                      mysql:/etc/postfix/mysql_domains.cf
                  virtual_uid_maps = static:${VirtualUID}
                  virtual_gid_maps = static:VIRTUALGID
              mode: "000640"
              owner: "root"
              group: "root"

          commands:
            01_no_hostname:
              command: "sed -i 's/^myhostname/#myhostname/' main.cf"
              cwd: /etc/postfix
              test: "grep ^myshostname main.cf"
            02_no_origin:
              command: "sed -i 's/^myorigin/#myorigin/' main.cf"
              cwd: /etc/postfix
              test: "grep ^myorigin main.cf"
            03_my_origin:
              command:
                Fn::If:
                  - DomainOrigin
                  - !Join
                    - ''
                    - - "sed -i "
                      - "'s/^#myorigin.*domain/myorigin = $mydomain/' main.cf"
                  - !Join
                    - ''
                    - - "sed -i "
                      - "'s/^#myorigin.*host/myorigin = $myhostname/' main.cf"
              cwd: /etc/postfix
            04_smtpd_banner:
              command:
                Fn::If:
                  - DefaultBanner
                  - !Join
                    - ''
                    - - "sed -i "
                      - "'s/^#smtpd_banner\\(.*mail_name$\\)/"
                      - "smtpd_banner\\1/' main.cf"
                  - !Join
                    - ''
                    - - "tac main.cf | awk '!p && /^#smtpd_banner/"
                      - "{print \"smtpd_banner = "
                      - !Ref Banner
                      - "\"; p=1} 1' | tac >> /tmp/banner.cf && "
                      - "mv /tmp/banner.cf main.cf"
              cwd: /etc/postfix
            05_relay_host:
              command: !Join
                - ''
                - - "tac main.cf | awk '!p && /^#relayhost/"
                  - "{ print\"relayhost = "
                  - !Ref RelayHost
                  - "\"; p=1} 1' | tac >> /tmp/relay.cf && "
                  - "mv /tmp/relay.cf main.cf"
              cwd: /etc/postfix
              test: "! grep ^relayhost main.cf"
            06_interfaces:
              command: !Join
                - ''
                - - "sed -i 's/^inet_interfaces.*/inet_interfaces = all/' "
                  - "main.cf"
              cwd: /etc/postfix
            07_networks_style:
              command: !Join
                - ''
                - - "sed -i 's/^#mynetworks_style = host/"
                  - "mynetworks_style = host/' main.cf"
              cwd: /etc/postfix
              test: "! grep ^mynetworks_style main.cf"
            08_inet_protocols:
              command: !Join
                - ''
                - - "sed -i 's/^inet_protocols =.*/"
                  - "inet_protocols = "
                  - !Ref InetProtocols
                  - "/' main.cf"
              cwd: /etc/postfix
            09_local_recipient_maps:
              command: !Join
                - ''
                - - "sed -i 's/^#local_recipient_maps =$/"
                  - "local_recipient_maps =/' main.cf"
              cwd: /etc/postfix
              test: "! grep ^local_recipient_maps main.cf"
            10_no_my_destination:
              command: "sed -i 's/^mydestination/#mydestination/' main.cf"
              cwd: /etc/postfix
              test: "grep ^mydestination main.cf"
            11_my_destination:
              command: !Join
                - ''
                - - "sed -i '0,/^#mydestination.*/s/^#mydestination.*/"
                  - "mydestination =\\\n&/' main.cf"
              cwd: /etc/postfix
            12_unknown_local_reject_code:
              command: !Join
                - ''
                - - "sed -i 's/^unknown_local_recipient_reject_code.*/"
                  - "unknown_local_recipient_reject_code = "
                  - !Ref UnknownLocalErrorCode
                  - "'/ main.cf"
              cwd: /etc/postfix
            #
            # Not sure why we do this. Maybe the OS is more likely to mangle
            # alias_maps than postfix is?
            #
            13_no_alias_maps:
              command: "sed -i 's/^alias_maps/#alias_maps/' main.cf"
              cwd: /etc/postfix
              test: "grep ^alias_maps main.cf"
            14_my_alias_maps:
              command: !Join
                - ''
                - - "tac main.cf | awk '!p && /^#alias_maps/"
                  - "{ print\"alias_maps = hash:/etc/postfix/aliases\""
                  - "; p=1} 1' | tac >> /tmp/aliasmaps.cf && "
                  - "mv /tmp/aliasmaps.cf main.cf"
              cwd: /etc/postfix
            15_no_alias_db:
              command: "sed -i 's/^alias_database/#alias_database/' main.cf"
              cwd: /etc/postfix
              test: "grep ^alias_database main.cf"
            16_alias_db:
              command: !Join
                - ''
                - - "tac main.cf | awk '!p && /^#alias_database/"
                  - "{ print\"alias_database = hash:/etc/postfix/aliases\""
                  - "; p=1} 1' | tac >> /tmp/aliasdb.cf && "
                  - "mv /tmp/aliasdb.cf main.cf"
              cwd: /etc/postfix
            17_gvid_extra_config:
              command: "sed -i \"s/VIRTUALGID/`id -g virtual`/\" \
                postfix_extras.cf"
              cwd: /tmp
              test: "test -f postfix_extras.cf"
            18_extra_config:
              command: "cat /tmp/postfix_extras.cf >> main.cf"
              cwd: /etc/postfix
              test: "test -f /tmp/postfix_extras.cf"
            18_extra_tls:
              command: !If
                - EnableTLS
                - "cat /tmp/postfix_tls.cf >> main.cf"
                - "echo skipping TLS"
              cwd: /etc/postfix
              test: "test -f /tmp/postfix_tls.cf"
            19_mv_aliases:
              command: "cp /etc/aliases ."
              cwd: /etc/postfix
              test: "test -f /etc/aliases"
            20_add_root_email:
              command: !Join
                - ''
                - - "echo \"root:	"
                  - !Ref RootMailRecipient
                  - "\" >> aliases"
              cwd: /etc/postfix
              test: "! grep ^root"
            21_update_aliases:
              command: "postalias aliases"
              cwd: /etc/postfix
              test: "test -f aliases"
            22_make_mail_dirs:
              command: "mkdir /var/spool/mail/virtual"
              test: "test ! -e /var/spool/mail/virtual"
            23_chown_mail_dirs:
              command: "chown -R virtual:virtual /var/spool/mail/virtual"
              test: "test -d /var/spool/mail/virtual"
          services:
            sysvinit:
              postfix:
                enabled: !If [DontStart, "false", "true"]
                ensureRunning: !If [DontStart, "false", "true"]

        config_dovecot:
          files:
            /etc/dovecot/dovecot-sql.conf.ext:
              content:
                Fn::Sub:
                  - |
                    #
                    # Added by cfn-init
                    # See https://xec.net/dovecot-migration/ for details
                    #
                    #For database driver, we want mysql:
                    driver = mysql

                    #The connect string will point to the maildb
                    #database on the local machine, with the user and
                    #password you defined when you set it up according
                    #to Flurdy.

                    connect = host=${RDSHost} \
                            dbname=${MailDBName} \
                            user=${MailDBUser} password=${MailDBPassword}

                    #We'll be using the encrypted password from the mysql
                    #database. This is a change from xec.net and Flurdy,
                    #which use CRYPT
                    default_pass_scheme = SHA256

                    #Set the password query to point to the users table:
                    password_query = SELECT id AS user, crypt AS password, \
                            CONCAT(home,'/',maildir) AS userdb_home, \
                            uid AS userdb_uid, gid AS userdb_gid, \
                            CONCAT('maildir:',home,'/',maildir) AS userdb_mail \
                            FROM users WHERE id='%u'
                  - RDSHost:
                      Fn::ImportValue:
                        !Sub '${DatabaseStackName}-MasterDBEndpoint'
              mode: "000640"
              owner: "virtual"
              group: "dovecot"
            /tmp/auth-sql.awk:
              content:
                !Sub |
                    /userdb[[:blank:]]{/,/}/ {
                        if (!comment) {
                                sub("#", "")
                                print
                                if ($0 ~ /}/) comment=1
                        } else {
                                if ($0 ~ /^[[:blank:]]*#/) {
                                        print
                                } else {
                                        print "#" $0
                                }
                        }
                        next
                    }
                    { print }
              mode: "000640"
              owner: "root"
              group: "root"

          commands:
            01_disable_protocols:
              command: "sed -i 's/^protocols =/#protocols =/' dovecot.conf"
              cwd: /etc/dovecot
              test: "grep ^protocols dovecot.conf"
            02_enable_protocols:
              command: !Join
                - ''
                - - "sed -i '0,/^#protocols =.*/s/^#protocols =.*/"
                  - "protocols = imap lmtp\\\n&/' dovecot.conf"
              cwd: /etc/dovecot
              test: "! grep ^protocols dovecot.conf"
            03_disable_plaintext_auth:
              command: "sed -i \
	        's/^#disable_plaintext_auth =/disable_plaintext_auth =/' \
		10-auth.conf"
              cwd: /etc/dovecot/conf.d
              test: "grep ^#disable_plaintext_auth 10-auth.conf"
            04_disable_existing_auth_mech:
              command: "sed -i \
	        's/^auth_mechanisms =/#auth_mechanisms =/' 10-auth.conf"
              cwd: /etc/dovecot/conf.d
              test: "grep ^auth_mechanisms 10-auth.conf"
            05_enable_auth_mech:
              command: !Join
                - ''
                - - "sed -i '0,/^#auth_mechanisms =.*/s/^#auth_mechanisms =.*/"
                  - "auth_mechanisms = plain login\\\n&/' 10-auth.conf"
              cwd: /etc/dovecot/conf.d
              test: "! grep ^auth_mechanisms 10-auth.conf"
            06_include_auth_sql:
              command: "sed -i \
	        's/^#!include auth-sql.conf.ext/!include auth-sql.conf.ext/' \
		10-auth.conf"
              cwd: /etc/dovecot/conf.d
              test: "grep ^#!include.auth-sql.conf.ext 10-auth.conf"
            07_disclude_auth_system:
              command: !Join
                - ''
                - - "sed -i 's/^!include auth-system.conf.ext/"
                  - "#!include auth-system.conf.ext/' 10-auth.conf"
              cwd: /etc/dovecot/conf.d
              test: "grep ^!include.auth-system.conf.ext 10-auth.conf"
            08_sensible_logging:
              command: !Join
                - ''
                - - "sed -i '0,/^#login_log_format_elements =.*/"
                  - "s/^#login_log_format_elements =.*/"
                  - "login_log_format_elements = user=<%u> method=%m "
                  - "rip=%r lip=%l mpid=%e %c\\\n&/' 10-logging.conf"
              cwd: /etc/dovecot/conf.d
              test: "! grep ^login_log_format_elements 10-logging.conf"
            09_mail_location:
              command: !Join
                - ''
                - - "tac 10-mail.conf | awk '!p && /^#mail_location/"
                  - "{ print\"mail_location = maildir:/var/mail/virtual/%u\""
                  - "; p=1} 1' | tac >> /tmp/maillocation.conf && "
                  - "mv /tmp/maillocation.conf 10-mail.conf"
              cwd: /etc/dovecot/conf.d
            10_fix_namespace:
              command: !Join
                - ''
                - - "sed -i '/^namespace inbox/,/}/ "
                  - "s/#separator =/separator = ./; "
                  - "/^namespace inbox/,/}/ "
                  - "s/#prefix =/prefix = INBOX\\./' 10-mail.conf"
              cwd: /etc/dovecot/conf.d
              test: "grep ^namespace.inbox 10-mail.conf"
            11_set_mail_uid:
              command: !Join
                - ''
                - - "sed -i 's/^#mail_uid =/mail_uid = "
                  - !Ref VirtualUID
                  - "/' 10-mail.conf"
              cwd: /etc/dovecot/conf.d
              test: "! grep ^mail_uid 10-mail.conf"
            12_set_mail_gid:
              command: !Join
                - ''
                - - "sed -i \"s/^#mail_gid =/mail_gid = `id -g virtual`/\""
                  - " 10-mail.conf"
              cwd: /etc/dovecot/conf.d
              test: "! grep ^mail_gid 10-mail.conf"
            13_set_priv_group:
              command: !Join
                - ''
                - - "sed -i 's/#mail_privileged_group =/"
                  - "mail_privileged_group = virtual/' 10-mail.conf"
              cwd: /etc/dovecot/conf.d
              test: "! grep ^mail_privileged_group 10-mail.conf"
            14_disable_pop3:
              command: !Join
                - ''
                - - "sed -i '/^service pop3/,/^}/ "
                  - "s/#port =.*/port = 0/' 10-master.conf"
              cwd: /etc/dovecot/conf.d
              test: "grep ^service.pop3-login 10-master.conf"
            15_no_ssl_cert:
              command: "sed -i 's/^ssl_cert =/#ssl_cert =/' 10-ssl.conf"
              cwd: /etc/dovecot/conf.d
              test: "grep ^ssl_cert 10-ssl.conf"
            16_no_ssl_key:
              command: "sed -i 's/^ssl_key =/#ssl_key =/' 10-ssl.conf"
              cwd: /etc/dovecot/conf.d
              test: "grep ^ssl_key 10-ssl.conf"
            17_max_connections:
              command: !Join
                - ''
                - - "sed -i 's/#mail_max_userip_connections =.*/"
                  - "mail_max_userip_connections = "
                  - !Ref MaxUserConnections
                  - "/' 20-imap.conf"
              cwd: /etc/dovecot/conf.d
              test: "grep .*#mail_max_userip_connections 20-imap.conf"
            18_switch_sql_for_prefetch:
              command: !Join
                - ''
                - - awk -f /tmp/auth-sql.awk auth-sql.conf.ext
                  - " > /tmp/prefetch.ext"
              cwd: /etc/dovecot/conf.d
              test: "test -f /tmp/auth-sql.awk"
            19_install_sql_conf:
              command: mv /tmp/prefetch.ext auth-sql.conf.ext
              cwd: /etc/dovecot/conf.d
              test: "test -f /tmp/prefetch.ext"
          services:
            sysvinit:
              dovecot:
                enabled: !If [DontStart, "false", "true"]
                ensureRunning: !If [DontStart, "false", "true"]

        config_dovecot_sasl:
          commands:
            01_use_dovecot_socket:
              command: |
                sed -i '/^service auth {/a\
                unix_listener /var/spool/postfix/private/auth {\
                  mode = 0660\
                  user = postfix\
                  group = postfix\
                }' 10-master.conf
              cwd: /etc/dovecot/conf.d
              test: "grep ^service.auth 10-master.conf"
            02_hup_dovecot:
              command: systemctl restart dovecot
              test: ! systemctl status dovecot

        config_tls:
          commands:
            01_install_ssl_cert:
              command: !Join
                - ''
                - - "sed -i '/^#ssl_key =.*/a "
                  - "ssl_cert = </etc/pki/dovecot/certs/"
                  - !Ref PrimaryServerName
                  - ".chain.pem' 10-ssl.conf"
              cwd: /etc/dovecot/conf.d
              test: !Join
                - ''
                - - "test -f "
                  - "/etc/pki/dovecot/certs/"
                  - !Ref PrimaryServerName
                  - ".chain.pem"
            02_install_ssl_key:
              command: !Join
                - ''
                - - "sed -i '/^#ssl_cert =.*/a "
                  - "ssl_key = </etc/pki/dovecot/private/"
                  - !Ref PrimaryServerName
                  - ".key' 10-ssl.conf"
              cwd: /etc/dovecot/conf.d
              test: !Join
                - ''
                - - "test -f "
                  - "/etc/pki/dovecot/private/"
                  - !Ref PrimaryServerName
                  - ".key"
            03_hup_dovecot:
              command: systemctl restart dovecot
              test: systemctl status dovecot 2>&1 > /dev/null
            04_open_submission_port:
              command: "sed -i 's/^#submission/submission/' master.cf"
              cwd: /etc/postfix
              test: grep -q ^#submission master.cf
            05_open_smtps:
              command: "sed -i 's/^#smtps/smtps/' master.cf"
              cwd: /etc/postfix
              test: grep -q ^#smtps master.cf
            06_sasl_auth_enable:
              command: !Join
                - ''
                - - "sed -i -e 's/#  -o smtpd_sasl_auth_enable=yes/"
                  - "  -o smtpd_sasl_auth_enable=yes/' master.cf"
              cwd: /etc/postfix
              test: grep -q ^submission master.cf
            07_tls_auth_only:
              command: !Join
                - ''
                - - "sed -i -e \"/^  -o smtpd_sasl_auth_enable=yes/a"
                  - "# if you do not want to restrict it encryption only,"
                  - " comment out next line\\n"
                  - "  -o smtpd_tls_auth_only=yes\" master.cf"
              cwd: /etc/postfix
              test: grep -q "^  -o smtpd_sasl_auth_enable" master.cf
            08_submission_smtpd_client_restrictions:
              command: !Join
                - ''
                - - "sed -i -e '/^submission/!b' "
                  - "-e ':a' -e 's/#  -o smtpd_client_restrictions.*/"
                  - "  -o smtpd_client_restrictions="
                  - "permit_sasl_authenticated,reject_unauth_destination,"
                  - "reject/;t trail' "
                  - "-e 'n;ba' -e ':trail' -e 'n;btrail' master.cf"
              cwd: /etc/postfix
              test: grep -q ^submission master.cf
            09_smtps_smtpd_client_restrictions:
              command: !Join
                - ''
                - - "sed -i -e '/^smtps/!b' "
                  - "-e ':a' -e 's/#  -o smtpd_client_restrictions.*/"
                  - "  -o smtpd_client_restrictions="
                  - "permit_sasl_authenticated,reject/;t trail' "
                  - "-e 'n;ba' -e ':trail' -e 'n;btrail' master.cf"
              cwd: /etc/postfix
              test: grep -q ^smtps master.cf
            10_smtpd_sasl_and_tls_security_options:
              command: !Join
                - ''
                - - "sed -i -e \"/^  -o smtpd_client_restrictions=.*/a"
                  - "\\ \\ -o smtpd_sasl_security_options=noanonymous,"
                  - "noplaintext\\n"
                  - "  -o smtpd_sasl_tls_security_options=noanonymous\""
                  - " master.cf"
              cwd: /etc/postfix
              test: grep -q ^submission master.cf
            11_hup_postfix:
              command: systemctl restart postfix
              test: systemctl status postfix 2>&1 > /dev/null

        config_amavisd:
          packages:
            yum:
              amavisd-new: []
          files:
            /tmp/amavisd_extra.cf:
              content: !Sub
                - |
                  ${AmavisDef}
                    -o smtp_data_done_timeout=1200
                    -o smtp_send_xforward_command=yes
                    -o disable_dns_lookups=yes
                    -o max_use=20
                  ${AmavisPort}
                    -o content_filter=
                    -o local_recipient_maps=
                    -o relay_recipient_maps=
                    -o smtpd_restriction_classes=
                    -o smtpd_delay_reject=no
                    -o smtpd_client_restrictions=permit_mynetworks,reject
                    -o smtpd_helo_restrictions=
                    -o smtpd_sender_restrictions=
                    -o smtpd_recipient_restrictions=permit_mynetworks,reject
                    -o smtpd_data_restrictions=reject_unauth_pipelining
                    -o smtpd_end_of_data_restrictions=
                    -o mynetworks=127.0.0.0/8
                    -o smtpd_error_sleep_time=0
                    -o smtpd_soft_error_limit=1001
                    -o smtpd_hard_error_limit=1000
                    -o smtpd_client_connection_count_limit=0
                    -o smtpd_client_connection_rate_limit=0
                    ${ReceiveOver}
                - {AmavisDef: !Join ['',
                                     ["amavis      unix    -       -",
                                      "       -       -       2       smtp"]],
                   AmavisPort: !Join ['',
                                      ["127.0.0.1:10025 inet    n       -",
                                       "       -       -       -       smtpd"]],
                   ReceiveOver: !Join ['',
                                       ["-o receive_override_options=",
                                        "no_header_body_checks,",
                                        "no_unknown_recipient_checks"]]}
              mode: "000640"
              owner: "root"
              group: "root"

          commands:
            01_local_domains_acl:
              command: !Join
                - ' '
                - - sed -i '/^$log_level/i@local_domains_acl = qw(.);'
                  - ' amavisd.conf'
              cwd: /etc/amavisd
              test: grep ^\$log_level amavisd.conf
            02_log_level:
              command: !Join
                - ' '
                - - sed -i 's/log_level = 0/log_level =
                  - !Sub ${ADLogLevel}/' amavisd.conf
              cwd: /etc/amavisd
              test: grep ^\$log_level amavisd.conf
            03_syslog_priority:
              command: !Join
                - ''
                - - sed -i "/^\$log_level.*/a\$syslog_priority = '
                  - !If [ADDebug, debug, info]
                  - "';\" amavisd.conf"
              cwd: /etc/amavisd
              test: grep ^\$log_level amavisd.conf
            04_no_tag_level_deflt:
              command: !Join
                - ' '
                - - sed -i 's/^$sa_tag_level_deflt/# $sa_tag_level_deflt/'
                  - 'amavisd.conf'
              cwd: /etc/amavisd
              test: grep ^\$sa_tag_level_deflt amavisd.conf
            05_no_tag2_level_deflt:
              command: !Join
                - ' '
                - - sed -i 's/^$sa_tag2_level_deflt/# $sa_tag2_level_deflt/'
                  - 'amavisd.conf'
              cwd: /etc/amavisd
              test: grep ^\$sa_tag2_level_deflt amavisd.conf
            06_kill_level_deflt:
              command: !Join
                - ''
                - - sed -i 's/^$sa_kill_level_deflt = .*;/
                  - !Sub \$sa_kill_level_deflt = ${SAKillLevelDeflt};/'
                  - " amavisd.conf"
              cwd: /etc/amavisd
              test: grep ^\$sa_tag2_level_deflt amavisd.conf
            07_no_dsn_cutoff_level:
              command: !Join
                - ' '
                - - sed -i 's/^$sa_dsn_cutoff_level/# $sa_dsn_cutoff_level/'
                  - 'amavisd.conf'
              cwd: /etc/amavisd
              test: grep ^\$sa_dsn_cutoff_level amavisd.conf
            08_pass_final_spam:
              command: !Join
                - ''
                - - sed -i "s/^\$final_spam_destiny.*= D_DISCARD/
                  - !Sub \$final_spam_destiny\t= ${SAFinalDest}/"
                  - ' amavisd.conf'
              cwd: /etc/amavisd
              test: grep ^\$final_spam_destiny amavisd.conf
            09_add_final_spam_comments:
              command: !Join
                - ''
                - - sed -i "/^\$final_spam_destiny.*/a
                  - "# \\$final_spam_destiny = D_REJECT; # default\\n"
                  - "# \\$final_spam_destiny = D_BOUNCE; # debian default\\n"
                  - "# \\$final_spam_destiny = D_DISCARD; # ubuntu default,"
                  - ' recommended as sender is usually faked'
                  - '" amavisd.conf'
              cwd: /etc/amavisd
              test: grep ^\$final_spam_destiny amavisd.conf
            10_add_amavisd_conf_to_postfix:
              command: cat /tmp/amavisd_extra.cf >> master.cf
              cwd: /etc/postfix
              test: "! grep ^amavis master.cf"
            11_set_my_domain:
              command: !If
                - ADDomain
                - !Join
                  - ' '
                  - - sed -i "s/^\$mydomain.*/\$mydomain = \'$(cat
                    - /etc/mailname | cut -f2- -d.)\';/" amavisd.conf
                - "echo leaving mydomain alone"
              cwd: /etc/amavisd
              test: grep ^\$mydomain amavisd.conf
            12_set_my_host:
              command: !If
                - ADDomain
                - !Join
                  - ' '
                  - - sed -i "/^# \$myhostname.*/a\$myhostname = \'$(cat
                    - /etc/mailname)\';" amavisd.conf
                - "echo leaving myhostname alone"
              cwd: /etc/amavisd
              test: grep "^# \$myhostname" amavisd.conf
            13_bypass_virus_checks:
              command: !If
                - ADVirusOff
                - !Join
                  - ''
                  - - sed -i 's/^# @bypass_virus_checks_maps =/
                    - "@bypass_virus_checks_maps =/' amavisd.conf"
                - "echo leaving bypass_virus_checks_maps alone"
              cwd: /etc/amavisd
              test: grep "^# \@bypass_virus_checks_maps =" amavisd.conf
            14_bypass_spam_checks:
              command: !If
                - ADSpamOff
                - !Join
                  - ''
                  - - sed -i 's/^# @bypass_spam_checks_maps =/
                    - "@bypass_spam_checks_maps =/' amavisd.conf"
                - "echo leaving bypass_spam_checks_maps alone"
              cwd: /etc/amavisd
              test: grep "^# \@bypass_virus_checks_maps =" amavisd.conf
            11_add_amavis_pickup_options:
              command: !Join
                - ''
                - - "sed -i -e \"/^pickup.*/a"
                  - "\\ \\ -o content_filter=\\n"
                  - "  -o receive_override_options=no_header_body_checks\""
                  - " master.cf"
              cwd: /etc/postfix
              test: grep ^\pickup master.cf
            12_connect_amavisd_and_postfix:
              command: !Join
                - ''
                - - echo "content_filter = amavis:[127.0.0.1]:10024" >>
                  - main.cf
              cwd: /etc/postfix
              test: "! grep ^content_filter main.cf"
          services:
            sysvinit:
              amavisd:
                enabled: !If [DontStart, "false", "true"]
                ensureRunning: !If [DontStart, "false", "true"]

        config_clamav:
          packages:
            yum:
              clamd: []
          files:
            /var/lib/clamav/main.cvd:
              source: http://database.clamav.net/main.cvd
              mode: "000644"
              owner: "amavis"
              group: "root"
            /var/lib/clamav/daily.cvd:
              source: http://database.clamav.net/daily.cvd
              mode: "000644"
              owner: "amavis"
              group: "root"
            /var/lib/clamav/bytecode.cvd:
              source: http://database.clamav.net/bytecode.cvd
              mode: "000644"
              owner: "amavis"
              group: "root"
          commands:
            # clamd takes longer to start than systemctl allows by default :(
            # systemctl daemon-reload ?
            01_give_service_start_extra_time:
              command: "echo TimeoutSec=5min >> clamd@.service"
              cwd: /usr/lib/systemd/system
              test: "[ -f clamd@.service ]"
            02_enable_clamd_amavisd:
              command: systemctl enable clamd@amavisd
              test: "! systemctl status clamd@amavisd"
          services:
            sysvinit:
              clamd@amavisd:
                ensureRunning: !If [DontStart, "false", "true"]

        restart_amavis:
          commands:
            01_restart_amavis:
              command: systemctl restart amavisd
              test: systemctl status amavisd

        restart_postfix:
          commands:
            01_restart_postfix:
              command: systemctl restart postfix
              test: systemctl status postfix

        config_postgrey:
          packages:
            yum:
              postgrey: []
          commands:
            01_config_postgrey_max_age:
              command: sed -i 's/"$/ --max-age=365"/' postgrey
              cwd: /etc/sysconfig
              test: "[ -f postgrey ]"
            02_add_postgrey_to_postfix:
              command: !Join
                - ''
                - - sed -i "s;[[:blank:]]reject_unauth_destination,.*;
                  - \ reject_unauth_destination,\n\ \ \ \ check_policy_service
                  - ' unix:postgrey/socket, permit;" main.cf'
              cwd: /etc/postfix
          services:
            sysvinit:
              postgrey:
                enabled: !If [DontStart, "false", "true"]
                ensureRunning: !If [DontStart, "false", "true"]

    Properties:
      IamInstanceProfile: !Ref MailInstanceProfile
      ImageId: !Ref MailAMIID
      InstanceType: !Ref MailInstanceType
      KeyName: !Ref EC2KeyName
      SecurityGroupIds:
        - !Ref MailSecurityGroup
      SubnetId: !Select [0, !Ref PrimarySubnet]
      Tags:
        -
          Key: Name
          Value: !Join ['', ['Primary Mail Server / ', !Ref 'AWS::StackName']]
      UserData:
        "Fn::Base64": !Sub
          - |
            #!/bin/bash -xe
            yum update -y
            yum install -y aws-cfn-bootstrap
            /opt/aws/bin/cfn-init \
              --configsets ${WantSwap}${DeployType}${InsertData},${Components} \
              --verbose --stack ${AWS::StackName} \
              --resource MailServerInstance --region ${AWS::Region}
            /opt/aws/bin/cfn-signal --exit-code $? --stack ${AWS::StackName} \
              --resource MailServerInstance --region ${AWS::Region}
          - {DeployType: !If [NoAdminUser, deploy_baseserver,
                              deploy_with_alt_admin],
             WantSwap: !If [SwapOn, "have_swap,", ""],
             InsertData: !If [UseTestData, ",insert_test_data", ""],
             Components: !If
               [EnablePostGrey, "config_01",
                !If [EnableClamAV, "config_02",
                     !If [EnableSpamAssassin, "config_03",
                          !If [EnableTLS, "config_04",
                               !If [EnableSASL, "config_05",
                                    !If [EnableDovecot, "config_06",
                                         "config_07"]]]]]]}

    # CreationPolicy:
    #   ResourceSignal:
    #     Count: 1
    #     Timeout: PT5M

  MasterSpoolMountPoint:
    Type: AWS::EC2::VolumeAttachment
    Properties:
      Device: /dev/xvds
      InstanceId: !Ref MailServerInstance
      VolumeId:
        Fn::ImportValue: !Sub '${StorageStackName}:MasterSpoolEBS'

  MasterSwapMountPoint:
    Type: AWS::EC2::VolumeAttachment
    Condition: SwapOn
    Properties:
      Device: /dev/xvdm
      InstanceId: !Ref MailServerInstance
      VolumeId:
        Fn::ImportValue: !Sub '${StorageStackName}:MasterSwapEBS'

  MasterLogMountPoint:
    Type: AWS::EC2::VolumeAttachment
    Properties:
      Device: /dev/xvdl
      InstanceId: !Ref MailServerInstance
      VolumeId:
        Fn::ImportValue: !Sub '${StorageStackName}:MasterLogEBS'

Outputs:
  PrimaryMailServerPrivateDNS:
    Value: !GetAtt MailServerInstance.PrivateDnsName
