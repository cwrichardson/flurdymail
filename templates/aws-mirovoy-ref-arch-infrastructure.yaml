---
AWSTemplateFormatVersion: 2010-09-09

Description: 'Mirovoy Reference Architecture - Infrastructure -
    Stack to deploy the core infrastructure for the Mirovoy Reference
    Architecture. This is a nested stack which will launch stacks for
    VPC, Security Groups, Bastion Autoscaling Group, NAT Instance Auto
    Scaling Group, Application Load Balancer, and MySQL RDS.'

Metadata:
  Authors:
    Description: Chris Richardson (cwr@mirovoysales.com)

  License:
    Description: 'Copyright 2019 Mirovoy Sales, s.r.o. and its affiliates.
      All Rights Reserved.
      SPDX-License-Identifier: MIT-0'

  History:
    Description: This work is based off of the aws-refarch-wordpress
      templates originally authored by Darryl Osborne (darrylo@amazon.com)

  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: General Parameters
        Parameters:
          - AdminUser
          - AdminPubKey
          - EC2KeyName
          - AMIOS
      -
        Label:
          default: Amazon VPC Parameters
        Parameters:
          - NumberOfAZs
          - AvailabilityZones
          - VpcCidr
          - VpcTenancy
          - PublicSubnet1Cidr
          - PublicSubnet2Cidr
          - AppSubnet1Cidr
          - AppSubnet2Cidr
          - DataSubnet1Cidr
          - DataSubnet2Cidr
      -
        Label:
          default: AWS Security Group Parameters
        Parameters:
          - SshAccessCidr
          - CreateMailSecGroup
      -
        Label:
          default: Amazon MySQL RDS Parameters
        Parameters:
          - DatabaseInstanceType
          - DatabaseMasterUsername
          - DatabaseMasterPassword
          - CreateReplica
          - DatabaseEncryptedBoolean
          - DatabaseCmk
          - DatabaseRestoreSnapshot
      -
        Label:
          default: Bastion Configuration
        Parameters:
          - BastionInstanceType
          - EnableBanner
          - BastionBanner
          - AlternativeBastionIAMRole
          - AlternativeBastionInitializationScript
          - BastionEnvironmentVariables
      -
        Label:
          default: NAT Configuration
        Parameters:
          - NatInstanceType
          - NatEnvironmentVariables
          - AlternativeNatIAMRole
          - AlternativeNatInitializationScript
      -
        Label:
          default: AWS S3 Configuration
        Parameters:
          - CFAssetsBucket
          - S3BastionKeyPrefix
          - S3NatKeyPrefix
          - SkelFileDir

    ParameterLabels:
      AdminUser:
        default: Alternative superuser account to create
      AdminPubKey:
        default: SSH public key for the AdminUser
      AlternativeBastionIAMRole:
        default: Alternative Bastion IAM Role
      AlternativeBastionInitializationScript:
        default: Alternative Bastion Initialization Script
      AlternativeNatIAMRole:
        default: Alternative NAT IAM Role
      AlternativeNatInitializationScript:
        default: Alternative NAT Initialization Script
      AMIOS:
        default: AMI ID for Servers
      BastionEnvironmentVariables:
        default: Environment Variables
      BastionInstanceType:
        default: Instance Type
      CFAssetsBucket:
        default: Mirovvoy CloudFront Assets S3 bucket name
      DatabaseEncryptedBoolean:
        default: Encrypted DB Cluster
      DatabaseCmk:
        default: AWS KMS Customer Master Key (CMK) to encrypt DB
      DatabaseInstanceType:
        default: DB Instance Class
      DatabaseMasterUsername:
        default: DB Master Username
      DatabaseMasterPassword:
        default: DB Master Password
      DatabaseRestoreSnapshot:
        default: Snapshot to restore from
      CreateReplica:
        default: Create Replica
      EC2KeyName:
        default: Existing Key Pair
      AppSubnet1Cidr:
        default: App Subnet 1
      AppSubnet2Cidr:
        default: App Subnet 2
      AvailabilityZones:
        default: Availability Zones
      CreateMailSecGroup:
        default: Create a security group for mail servers
      DataSubnet1Cidr:
        default: Data Subnet 1
      DataSubnet2Cidr:
        default: Data Subnet 2
      NatEnvironmentVariables:
        default: NAT Environment Variables
      NatInstanceType:
        default: Instance Type
      NumberOfAZs:
        default: Number of Availability Zones
      PublicSubnet1Cidr:
        default: Public Subnet 1
      PublicSubnet2Cidr:
        default: Public Subnet 2
      S3BastionKeyPrefix:
        default: Mirovoy CloudFront Assets Bastion S3 bucket key prefix
      S3NatKeyPrefix:
        default: Mirovoy CloudFront Assets Bastion S3 bucket key prefix
      SshAccessCidr:
        default: SSH Access From
      SkelFileDir:
        default: Skeleton File Directory
      VpcCidr:
        default: VpcCidr
      VpcTenancy:
        default: VpcTenancy

Parameters:
  AdminUser:
    AllowedPattern: "^[a-z][-a-z0-9]*$|^$"
    ConstraintDescription: "Must be a valid username for the OS to be used.
      For sanity's sake, confining this to starting with a lower-case letter,
      followed by an arbitrary number of lower-case letters, numbers, and the
      dash character ('-')."
    Description: 'An alternate account to be created on bastion instances with
      superuser permissions.'
    Type: String
  AdminPubKey:
    Description: 'The public key text to be installed in the authorized_hosts
      file for the admin user. Will also be installed as an accepted key for
      the default admin user.'
    Type: String
  AlternativeBastionIAMRole:
    Description: 'Specify an existing IAM Role name to attach to the bastion.
      If left blank, a new role will be created.'
    Default: ''
    Type: String
  AlternativeBastionInitializationScript:
    AllowedPattern: "^http.*|^$"
    ConstraintDescription: 'URL must begin with "http".'
    Description: 'URL for an alternative initialization script to run during
      setup. By default, during startup the instances will look in the S3
      configuration below and run .../<prefix/>scripts/bastion_bootstrap.sh.
      This should be the full URL to an alternative script.'
    Default: ""
    Type: String
  AlternativeNatIAMRole:
    Description: 'Specify an existing IAM Role name to attach to the NAT
      instances.  If left blank, a new role will be created.'
    Default: ''
    Type: String
  AlternativeNatInitializationScript:
    AllowedPattern: "^http.*|^$"
    ConstraintDescription: 'URL must begin with "http".'
    Description: 'URL for an alternative initialization script to run during
      setup. By default, during startup the instances will look in the S3
      configuration below and run .../<prefix/>scripts/nat_bootstrap.sh.
      This should be the full URL to an alternative script.'
    Default: ""
    Type: String
  AMIOS:
    Default: '/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2'
    Description: AMI ID to use for EC2 instances
    Type: String
  AppSubnet1Cidr:
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/(1[6-9]|2[0-8])'
    ConstraintDescription: CIDR block parameter must be in the form
      x.x.x.x/16-28
    Default: 10.0.4.0/22
    Description: CIDR block for App subnet 1 located in Availability Zone 1
    Type: String
  AppSubnet2Cidr:
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/(1[6-9]|2[0-8])'
    ConstraintDescription: CIDR block parameter must be in the form
      x.x.x.x/16-28
    Default: 10.0.8.0/22
    Description: CIDR block for App subnet 2 located in Availability Zone 2
    Type: String
  AvailabilityZones:
    Description: 'List of Availability Zones to use for the subnets in the VPC.
      Note: The logical order is preserved (i.e., "master" resources will
      go in the first one selected, "backup" in the second). Currently, exactly
      two must be selected.'
    Type: List<AWS::EC2::AvailabilityZone::Name>
  BastionBanner:
    Default: "var/banner_message.txt"
    Description: 'Path and file under S3 prefix for Banner text to display
      upon login. Should not start with a "/".'
    Type: String
  BastionEnvironmentVariables:
    Description: 'Specify a comma separated list of environment variables for
      use in bootstrapping by the alternative initialization script. Variables
      must be in the format KEY=VALUE. VALUE cannot contain commas.'
    Default: ''
    Type: String
  BastionInstanceType:
    AllowedValues:
      - t2.nano
      - t2.micro
      - t2.small
      - t2.medium
      - t3.nano
      - t3.micro
      - t3.small
      - t3.medium
      - m3.medium
      - c5.large
    ConstraintDescription: Must be a valid Amazon EC2 instance type.
    Default: t3.nano
    Description: Bastion EC2 instance type.
    Type: String
  CFAssetsBucket:
    AllowedPattern: "^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$"
    ConstraintDescription: 'Mirovoy CloudFront Assets Bucket name can include
      numbers, lowercase letters, uppercase letters, and hyphens (-). It cannot
      start or end with a hyphen (-).'
    Default: "mirovoy-cf-assets"
    Description: 'S3 bucket name for the CloudFormation assets. If you look
      at an S3 URL,
      it would be "https://<asset-bucke>.s3-<region>.amazonaws.com".'
    Type: String
  CreateMailSecGroup:
    AllowedValues:
      - 'True'
      - 'False'
    Default: 'True'
    Description: Create a security group for use by mail servers
    Type: String
  CreateReplica:
    AllowedValues:
      - true
      - false
    Default: true
    Description: "Whether or not to create a read-replica instance of the
      database."
    Type: String
  DatabaseEncryptedBoolean:
    AllowedValues:
      - true
      - false
    Default: true
    Description: "Indicates whether the DB instances in the cluster are
      encrypted. NOTE: if you select t2.micro as the instance type, then this
      must be set to 'false', as encryption at rest is unsupported for that
      instance type."
    Type: String
  DatabaseCmk:
    Description: AWS KMS Customer Master Key (CMK) to encrypt database cluster
    Type: String
  DatabaseInstanceType:
    AllowedValues:
      - db.t2.micro
      - db.t2.small
      - db.t2.medium
      - db.t2.large
      - db.t2.xlarge
      - db.r3.large
      - db.r3.xlarge
      - db.r3.2xlarge
      - db.r3.4xlarge
      - db.r3.8xlarge
      - db.r4.large
      - db.r4.xlarge
      - db.r4.2xlarge
      - db.r4.4xlarge
      - db.r4.8xlarge
      - db.r4.16xlarge
    ConstraintDescription: Must be a valid RDS instance class.
    Default: db.t2.small
    Description: The Amazon RDS database instance class. Note, t2.small is
      the smallest instance type that supports encryption at rest. If you
      switch to t2.micro, you'll need to set encryption to "false" below.
    Type: String
  DatabaseMasterUsername:
    AllowedPattern: ^([a-zA-Z0-9]*)$
    Description: The "root" user to configure for the Amazon RDS database.
    ConstraintDescription: "Must contain only alphanumeric characters
      (minimum 8; maximum 16)."
    MaxLength: 32
    MinLength: 1
    Type: String
  DatabaseMasterPassword:
    AllowedPattern: ^([a-z0-9A-Z`~!#$%^&*()_+,\\-])*$
    ConstraintDescription: "Must be letters (upper or lower), numbers, and
      these special characters '_'`~!#$%^&*()_+,-"
    Description: The Amazon RDS "root" user password
    MaxLength: 41
    MinLength: 8
    NoEcho: true
    Type: String
  DatabaseRestoreSnapshot:
    Description: The snapshot name to restore from.
    Type: String
  DataSubnet1Cidr:
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/(1[6-9]|2[0-8])'
    ConstraintDescription: CIDR block parameter must be in the form
      x.x.x.x/16-28
    Default: 10.0.100.0/24
    Description: CIDR block for data subnet 1 located in Availability Zone 1
    Type: String
  DataSubnet2Cidr:
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/(1[6-9]|2[0-8])'
    ConstraintDescription: CIDR block parameter must be in the form
      x.x.x.x/16-28
    Default: 10.0.101.0/24
    Description: CIDR block for data subnet 2 located in Availability Zone 2
    Type: String
  EC2KeyName:
    Description: Name of an EC2 KeyPair. Your bastion instances will launch
      with this KeyPair.
    Type: AWS::EC2::KeyPair::KeyName
  EnableBanner:
    AllowedValues:
      - "true"
      - "false"
    Default: "true"
    Description: 'To include a banner to be displayed when connecting via SSH
      to the bastion, set this parameter to true.'
    Type: String
  NatEnvironmentVariables:
    Description: 'Specify a comma separated list of environment variables for
      use in bootstrapping by the alternative initialization script. Variables
      must be in the format KEY=VALUE. VALUE cannot contain commas.'
    Default: ''
    Type: String
  NatInstanceType:
    AllowedValues:
      - t2.nano
      - t2.micro
      - t2.small
      - t2.medium
      - t3.nano
      - t3.micro
      - t3.small
      - t3.medium
      - m3.medium
      - c5.large
    ConstraintDescription: Must be a valid Amazon EC2 instance type.
    Default: t3.nano
    Description: 'NAT EC2 instance type. NB: t3 instances have burstable CPU
      which is charged at an additional $0.05 per CPU hour. If you are
      running at max CPU utilization for an entire month, then m3.medium
      and c5.large are actually more cost effective. Keep an eye on your
      burst charges and adjust your instance type as necessary.'
    Type: String
  NumberOfAZs:
    AllowedValues:
      - 2
    Default: 2
    Description: Number of Availability Zones to use in the VPC. Currently
      must be exactly 2.
    Type: Number
  PublicSubnet1Cidr:
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/(1[6-9]|2[0-8])'
    ConstraintDescription: CIDR block parameter must be in the form
      x.x.x.x/16-28
    Default: 10.0.200.0/24
    Description: CIDR block for Public subnet 1 located in Availability Zone 1
    Type: String
  PublicSubnet2Cidr:
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/(1[6-9]|2[0-8])'
    ConstraintDescription: CIDR block parameter must be in the form
      x.x.x.x/16-28
    Default: 10.0.201.0/24
    Description: CIDR block for Public subnet 2 located in Availability Zone 2
    Type: String
  S3BastionKeyPrefix:
    AllowedPattern: "^([0-9a-zA-Z-]+/)*$"
    ConstraintDescription: 'Mirovoy CloudFront Assets S3 bucket  key prefix
      can include numbers, lowercase letters, uppercase letters, hyphens (-),
      and forward slash (/). The prefix should end with a forward slash (/).'
    Default: "bastion/"
    Description: 'S3 key prefix for the Mirovoy CloudFormation assets. This
      should be the top-level directory path inside the bucket, leading to the
      assets for this template (e.g., scripts directory, etc... are located)'
    Type: String
  S3NatKeyPrefix:
    AllowedPattern: "^([0-9a-zA-Z-]+/)*$"
    ConstraintDescription: 'CloudFront Assets S3 bucket key prefix
      can include numbers, lowercase letters, uppercase letters, hyphens (-),
      and forward slash (/). The prefix should end with a forward slash (/).
      For example mybucket.s3-eu-central-1.amazonaws.com/<prefix/>.'
    Default: "nat/"
    Description: 'S3 key prefix for the CloudFormation assets. This
      should be the top-level directory path inside the bucket, leading to the
      assets for this template (e.g., scripts directory, etc... are located)'
    Type: String
  SshAccessCidr:
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/\d{1,2}'
    Description: The CIDR IP range that is permitted to SSH to bastion
      instance. Note - a value of 0.0.0.0/0 will allow access from ANY IP
      address.
    Type: String
    Default: 0.0.0.0/0
  SkelFileDir:
    Default: "var/skel/"
    Description: "Path under S3 prefix for shell configuration file to put in
      the alternate admin user's home dir, via /etc/skel/. Should end in a
      slash."
    Type: String
  VpcCidr:
    AllowedPattern: '((\d{1,3})\.){3}\d{1,3}/(1[6-9]|2[0-8])'
    ConstraintDescription: CIDR block parameter must be in the form
      x.x.x.x/16-28
    Default: 10.0.0.0/16
    Description: CIDR block for the VPC
    Type: String
  VpcTenancy:
    AllowedValues:
      - default
      - dedicated
    Default: default
    Description: The allowed tenancy of instances launched into the VPC
    Type: String

Resources:
  newvpc:
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        NumberOfAZs:
          !Ref NumberOfAZs
        AvailabilityZones: !Join
          - ','
          - !Ref AvailabilityZones
        VpcCidr:
          !Ref VpcCidr
        VpcTenancy:
          !Ref VpcTenancy
        AppSubnet1Cidr:
          !Ref AppSubnet1Cidr
        AppSubnet2Cidr:
          !Ref AppSubnet2Cidr
        DataSubnet1Cidr:
          !Ref DataSubnet1Cidr
        DataSubnet2Cidr:
          !Ref DataSubnet2Cidr
        PublicSubnet1Cidr:
          !Ref PublicSubnet1Cidr
        PublicSubnet2Cidr:
          !Ref PublicSubnet2Cidr
      TemplateURL: !Join
        - ''
        - - https://mirovoy-public.s3.eu-central-1.amazonaws.com/
          - mirovoy-refarch/infrastructure/latest/
          - aws-mirovoy-ref-arch-01-newvpc.yaml

  securitygroups:
    DependsOn: newvpc
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        AppSubnet1Cidr:
          !Ref AppSubnet1Cidr
        AppSubnet2Cidr:
          !Ref AppSubnet2Cidr
        SshAccessCidr:
          !Ref SshAccessCidr
        CreateMailSecGroup:
          !Ref CreateMailSecGroup
        Vpc:
          !GetAtt [newvpc, Outputs.Vpc]
      TemplateURL: !Join
        - ''
        - - https://mirovoy-public.s3.eu-central-1.amazonaws.com/
          - mirovoy-refarch/infrastructure/latest/
          - aws-mirovoy-ref-arch-02-securitygroups.yaml

  bastion:
    DependsOn: securitygroups
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        AdminUser:
          !Ref AdminUser
        AdminPubKey:
          !Ref AdminPubKey
        AlternativeIAMRole:
          !Ref AlternativeBastionIAMRole
        AlternativeInitializationScript:
          !Ref AlternativeBastionInitializationScript
        BastionAMIOS:
          !Ref AMIOS
        BastionBanner:
          !Ref BastionBanner
        BastionInstanceType:
          !Ref BastionInstanceType
        BastionSecurityGroup:
          !GetAtt [securitygroups, Outputs.BastionSecurityGroup]
        CFAssetsBucket:
          !Ref CFAssetsBucket
        EC2KeyName:
          !Ref EC2KeyName
        EnableBanner:
          !Ref EnableBanner
        EnvironmentVariables:
          !Ref BastionEnvironmentVariables
        NumberOfSubnets:
          !Ref NumberOfAZs
        S3KeyPrefix:
          !Ref S3BastionKeyPrefix
        SkelFileDir:
          !Ref SkelFileDir
        Subnet:
          !GetAtt [newvpc, Outputs.PublicSubnet]
      TemplateURL: !Join
        - ''
        - - https://mirovoy-public.s3.eu-central-1.amazonaws.com/
          - mirovoy-refarch/infrastructure/latest/
          - aws-mirovoy-ref-arch-03-bastion.yaml

  nat:
    DependsOn: securitygroups
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        AdminUser:
          !Ref AdminUser
        AdminPubKey:
          !Ref AdminPubKey
        AlternativeIAMRole:
          !Ref AlternativeNatIAMRole
        AlternativeInitializationScript:
          !Ref AlternativeNatInitializationScript
        AppSubnet:
          !GetAtt [newvpc, Outputs.AppSubnet]
        NatAMIOS:
          !Ref AMIOS
        NatInstanceType:
          !Ref NatInstanceType
        NatSecurityGroup:
          !GetAtt [securitygroups, Outputs.NatSecurityGroup]
        CFAssetsBucket:
          !Ref CFAssetsBucket
        EC2KeyName:
          !Ref EC2KeyName
        EnvironmentVariables:
          !Ref NatEnvironmentVariables
        NumberOfAZs:
          !Ref NumberOfAZs
        PublicSubnet:
          !GetAtt [newvpc, Outputs.PublicSubnet]
        S3KeyPrefix:
          !Ref S3NatKeyPrefix
        SkelFileDir:
          !Ref SkelFileDir
      TemplateURL: !Join
        - ''
        - - https://mirovoy-public.s3.eu-central-1.amazonaws.com/
          - mirovoy-refarch/infrastructure/latest/
          - aws-mirovoy-ref-arch-03-nat.yaml

  rds:
    DependsOn: securitygroups
    Type: AWS::CloudFormation::Stack
    Properties:
      Parameters:
        CreateReplica:
          !Ref CreateReplica
        DatabaseCmk:
          !Ref DatabaseCmk
        DatabaseEncryptedBoolean:
          !Ref DatabaseEncryptedBoolean
        DatabaseInstanceType:
          !Ref DatabaseInstanceType
        DatabaseMasterUsername:
          !Ref DatabaseMasterUsername
        DatabaseMasterPassword:
          !Ref DatabaseMasterPassword
        DatabaseRestoreSnapshot:
          !Ref DatabaseRestoreSnapshot
        DatabaseSecurityGroup:
          !GetAtt [securitygroups, Outputs.DatabaseSecurityGroup]
        NumberOfSubnets:
          !Ref NumberOfAZs
        Subnet:
          !GetAtt [newvpc, Outputs.DataSubnet]
      TemplateURL: !Join
        - ''
        - - https://mirovoy-public.s3.eu-central-1.amazonaws.com/
          - mirovoy-refarch/infrastructure/latest/
          - aws-mirovoy-ref-arch-03-rds.yaml
