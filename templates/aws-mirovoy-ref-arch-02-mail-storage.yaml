---
AWSTemplateFormatVersion: 2010-09-09

Description: "Mirovoy Reference Architecture - Create mail storage
    This template creates EBS storage for the mail servers. it
    creates 2 volumes: one for /var/spool (actual mail) and one for
    /var/log. Optionally also creates volumes for swap, which we
    use as we don't have enough mail to justify a higher-end server."

Metadata:

  Authors:
    Description: Chris Richardson (cwr@mirovoysales.com)

  License:
    Description: 'Copyright 2018-2019 Mirovoy Sales, s.r.o. and its affiliates.
      All Rights Reserved.
      SPDX-License-Identifier: MIT-0'

  History:
    Description: This work is based off of the aws-refarch-wordpress
      templates originally authored by Darryl Osborne (darrylo@amazon.com)

  AWS::CloudFormation::Interface:

    ParameterGroups:
      - Label:
          default: Mail Server EBS Parameters
        Parameters:
          - LogSize
          - SpoolSize
          - CreateSwap
          - SwapSize
          - AvailabilityZone
      - Label:
          default: Encrypt EBS Devices
        Parameters:
          - EncryptedBoolean
          - Cmk
      - Label:
          default: Retention Policy
        Parameters:
          - LogDelPolicy
          - SpoolDelPolicy
      - Label:
          default: Restore from Snapshots
        Parameters:
          - MasterSpoolSnapshot
          - MasterLogSnapshot
          - BackupSpoolSnapshot
          - BackupLogSnapshot

    ParameterLabels:
      AvailabilityZone:
        default: Availability Zone
      Cmk:
        default: KMS Key
      CreateSwap:
        default: Create swap devices?
      EncryptedBoolean:
        default: Encryption state
      LogDelPolicy:
        default: What to do with Log on stack deletion
      LogSize:
        default: Size for /var/log
      LogSnapshot:
        default: Snapshot ID from which to create volume /var/log
      SpoolDelPolicy:
        default: What to do with Spool on stack deletion
      SpoolSize:
        default: Size for /var/spool
      SpoolSnapshot:
        default: Snapshot ID from which to create volume /var/spool
      SwapSize:
        default: Size for swap

Parameters:
  AvailabilityZone:
    Description: 'Availability Zone in which to place the EBS volumes'
    Type: List<AWS::EC2::AvailabilityZone::Name>
  Cmk:
    Description: 'The Amazon Resource Name (ARN) of an existing AWS KMS
      Customer Master Key (CMK) to encrypt EBS volumes.'
    Type: String
  CreateSwap:
    AllowedValues:
      - true
      - false
    Default: true
    Description: Create an encrypted Amazon EBS Volume
    Type: String
  EncryptedBoolean:
    AllowedValues:
      - true
      - false
    Default: true
    Description: Create an encrypted Amazon EBS Volume
    Type: String
  LogSize:
    ConstraintDescription: Must be an integer.
    Default: 2
    Description: Size (in GB) for device to mount on /var/log
    MaxValue: 16384
    MinValue: 1
    Type: Number
  LogSnapshot:
    Description: The snapshot name from which to restore /var/log
    Type: String
  LogDelPolicy:
    AllowedValues:
      - Delete
      - Retain
      - Snapshot
    Default: Delete
    Description: What to do with the log volumes when the stack is deleted.
    Type: String
  SpoolDelPolicy:
    AllowedValues:
      - Delete
      - Retain
      - Snapshot
    Default: Retain
    Description: What to do with the spool volumes when the stack is deleted.
    Type: String
  SpoolSize:
    ConstraintDescription: Must be an integer.
    Default: 10
    Description: Size (in GB) for device to mount on /var/spool
    MaxValue: 16384
    MinValue: 1
    Type: Number
  SpoolSnapshot:
    Description: The snapshot name from which to restore /var/spool
    Type: String
  SwapSize:
    ConstraintDescription: Must be an integer.
    Default: 2
    Description: Size (in GB) for device to mount on /var/spool
    MaxValue: 16384
    MinValue: 1
    Type: Number

Conditions:
  CreateSwapVolumes:
    !Equals [true, !Ref CreateSwap]
  CreateSwapVolumes:
    !Equals [true, !Ref CreateSwap]
  NoSpoolSnapshot:
    !Equals ['', !Ref SpoolSnapshot]
  NoLogSnapshot:
    !Equals ['', !Ref LogSnapshot]
  UseAWS-ManagedCMK:
    !Equals ['', !Ref Cmk]
  #
  # This is stupid and gross, but the DeletionPolicy parameter only accepts a
  # literal string and so do conditions, so the only way to change it is to
  # duplicate all of the block and use conditions :(
  #
  SnapshotSpool:
    !Equals ['Snapshot', !Ref SpoolDelPolicy]
  RetainSpool:
    !Equals ['Retain', !Ref SpoolDelPolicy]
  DeleteSpool:
    !Equals ['Delete', !Ref SpoolDelPolicy]
  SnapshotLog:
    !Equals ['Snapshot', !Ref LogDelPolicy]
  RetainLog:
    !Equals ['Retain', !Ref LogDelPolicy]
  DeleteLog:
    !Equals ['Delete', !Ref LogDelPolicy]

Resources:

  SpoolEBS:
    Type: AWS::EC2::Volume
    Condition: SnapshotSpool
    Properties:
      AvailabilityZone: !Select [0, !Ref AvailabilityZone]
      Encrypted: !Ref EncryptedBoolean
      KmsKeyId:
        !If [UseAWS-ManagedCMK, !Ref 'AWS::NoValue', !Ref Cmk]
      Size: !Ref SpoolSize
      SnapshotId: !If [NoSpoolSnapshot, !Ref 'AWS::NoValue',
                       !Ref SpoolSnapshot]
      Tags:
        - Key: Name
          Value: !Join ['', [!Ref 'AWS::StackName', ' / SpoolEBS ']]
      VolumeType: gp2
    DeletionPolicy: Snapshot

  KeepSpoolEBS:
    Type: AWS::EC2::Volume
    Condition: RetainSpool
    Properties:
      AvailabilityZone: !Select [0, !Ref AvailabilityZone]
      Encrypted: !Ref EncryptedBoolean
      KmsKeyId:
        !If [UseAWS-ManagedCMK, !Ref 'AWS::NoValue', !Ref Cmk]
      Size: !Ref SpoolSize
      SnapshotId: !If [NoSpoolSnapshot, !Ref 'AWS::NoValue',
                       !Ref SpoolSnapshot]
      Tags:
        - Key: Name
          Value: !Join ['', [!Ref 'AWS::StackName', ' / SpoolEBS ']]
      VolumeType: gp2
    DeletionPolicy: Retain

  DelSpoolEBS:
    Type: AWS::EC2::Volume
    Condition: DeleteSpool
    Properties:
      AvailabilityZone: !Select [0, !Ref AvailabilityZone]
      Encrypted: !Ref EncryptedBoolean
      KmsKeyId:
        !If [UseAWS-ManagedCMK, !Ref 'AWS::NoValue', !Ref Cmk]
      Size: !Ref SpoolSize
      SnapshotId: !If [NoSpoolSnapshot, !Ref 'AWS::NoValue',
                       !Ref SpoolSnapshot]
      Tags:
        - Key: Name
          Value: !Join ['', [!Ref 'AWS::StackName', ' / SpoolEBS ']]
      VolumeType: gp2
    DeletionPolicy: Delete

  LogEBS:
    Type: AWS::EC2::Volume
    Condition: SnapshotLog
    Properties:
      AvailabilityZone: !Select [0, !Ref AvailabilityZone]
      Encrypted: !Ref EncryptedBoolean
      KmsKeyId:
        !If [UseAWS-ManagedCMK, !Ref 'AWS::NoValue', !Ref Cmk]
      Size: !Ref LogSize
      SnapshotId: !If [NoLogSnapshot, !Ref 'AWS::NoValue',
                       !Ref LogSnapshot]
      Tags:
        - Key: Name
          Value: !Join ['', [!Ref 'AWS::StackName', ' / LogEBS ']]
      VolumeType: gp2
    DeletionPolicy: Snapshot

  KeepLogEBS:
    Type: AWS::EC2::Volume
    Condition: RetainLog
    Properties:
      AvailabilityZone: !Select [0, !Ref AvailabilityZone]
      Encrypted: !Ref EncryptedBoolean
      KmsKeyId:
        !If [UseAWS-ManagedCMK, !Ref 'AWS::NoValue', !Ref Cmk]
      Size: !Ref LogSize
      SnapshotId: !If [NoLogSnapshot, !Ref 'AWS::NoValue',
                       !Ref LogSnapshot]
      Tags:
        - Key: Name
          Value: !Join ['', [!Ref 'AWS::StackName', ' / LogEBS ']]
      VolumeType: gp2
    DeletionPolicy: Retain

  DelLogEBS:
    Type: AWS::EC2::Volume
    Condition: DeleteLog
    Properties:
      AvailabilityZone: !Select [0, !Ref AvailabilityZone]
      Encrypted: !Ref EncryptedBoolean
      KmsKeyId:
        !If [UseAWS-ManagedCMK, !Ref 'AWS::NoValue', !Ref Cmk]
      Size: !Ref LogSize
      SnapshotId: !If [NoLogSnapshot, !Ref 'AWS::NoValue',
                       !Ref LogSnapshot]
      Tags:
        - Key: Name
          Value: !Join ['', [!Ref 'AWS::StackName', ' / LogEBS ']]
      VolumeType: gp2
    DeletionPolicy: Delete

  SwapEBS:
    Type: AWS::EC2::Volume
    Condition: CreateSwapVolumes
    Properties:
      AvailabilityZone: !Select [0, !Ref AvailabilityZone]
      Encrypted: false
      Size: !Ref SwapSize
      Tags:
        - Key: Name
          Value: !Join ['', [!Ref 'AWS::StackName', ' / SwapEBS ']]
      VolumeType: gp2
    DeletionPolicy: Delete

Outputs:
  FormatSpool:
    Description: Whether to reformat /var/spool when attaching to mail
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", FormatSpool]]
    Value: !If [NoSpoolSnapshot, true, false]
  FormatLog:
    Description: Whether to reformat /var/log when attaching to mail
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", FormatLog]]
    Value: !If [NoLogSnapshot, true, false]
  StackName:
    Description: The name of the stack
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", StackName]]
    Value: !Ref "AWS::StackName"
  SwapVolumesBoolean:
    Description: Whether swap EBS volumes were created
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", SwapOn]]
    Value: !If [CreateSwapVolumes, true, false]
  SpoolEBS:
    Condition: SnapshotSpool
    Description: EBS Volume for mail files
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", SpoolEBS]]
    Value: !Ref SpoolEBS
  DelSpoolEBS:
    Condition: DeleteSpool
    Description: EBS Volume for mail files
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", SpoolEBS]]
    Value: !Ref DelSpoolEBS
  KeepSpoolEBS:
    Condition: RetainSpool
    Description: EBS Volume for mail files
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", SpoolEBS]]
    Value: !Ref KeepSpoolEBS
  LogEBS:
    Condition: SnapshotLog
    Description: EBS Volume for log files
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", LogEBS]]
    Value: !Ref LogEBS
  DelLogEBS:
    Condition: DeleteLog
    Description: EBS Volume for log files
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", LogEBS]]
    Value: !Ref DelLogEBS
  KeepLogEBS:
    Condition: RetainLog
    Description: EBS Volume for log files
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", LogEBS]]
    Value: !Ref KeepLogEBS
  Swap:
    Condition: CreateSwapVolumes
    Description: EBS Volume for swap
    Export:
      Name: !Join [":", [!Ref "AWS::StackName", SwapEBS]]
    Value: !Ref SwapEBS
