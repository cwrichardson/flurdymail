---
AWSTemplateFormatVersion: 2010-09-09

Description: 'Mirovoy Reference Architecture - Launch RDS
    This template creates a MySQL database, and a read-replica copy
    in an alternative availability zone.'

Metadata:

  Authors:
    Description: Chris Richardson (cwr@mirovoysales.com
  License:
    Description: 'Copyright 2018 Mirovoy Sales, s.r.o.  and its
	affiliates. All Rights Reserved.  This is a derivative work
	of an Amazon template, and as such falls under the derivate
	works section of the the Amazon Software License (the
	"License").  You may not use this file except in compliance
	with the License. A copy of the License is located at
	http://aws.amazon.com/asl/ This file is distributed on an
	"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
	either express or implied. See the License for the specific
	language governing permissions and limitations under the
	License.'

  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: Database Parameters
      Parameters:
        - DatabaseInstanceType
        - DatabaseMasterUsername
        - DatabaseMasterPassword
        - DatabaseEncrpytedBoolean
        - DatabaseCmk
        - DatabaseSecurityGroup
        - NumberOfSubnets
        - Subnet
    ParameterLabels:
      DatabaseEncrpytedBoolean:
        default: Encrypted DB Cluster
      DatabaseCmk:
        default: AWS KMS Customer Master Key (CMK) to encrypt DB 
      DatabaseInstanceType:
        default: DB Instance Class 
      DatabaseMasterUsername:
        default: DB Master Username
      DatabaseMasterPassword:
        default: DB Master Password
      DatabaseRestoreSnapshot:
        default: Snapshot to restore from
      DatabaseSecurityGroup:
        default: DB Security Group
      NumberOfSubnets:
        default: Number of subnets
      Subnet:
        default: Subnets

Parameters:

  DatabaseEncrpytedBoolean:
    AllowedValues:
      - true
      - false
    Default: True
    Description: Indicates whether the DB instances in the cluster are encrypted.
    Type: String
  DatabaseCmk:
    Description: AWS KMS Customer Master Key (CMK) to encrypt database cluster
    Type: String
  DatabaseInstanceType:
    AllowedValues:
# t2.micro not currently available, as it doesn't allow encryption at rest
      - db.t2.small
      - db.t2.medium
      - db.t2.large
      - db.t2.xlarge
      - db.r3.large
      - db.r3.xlarge
      - db.r3.2xlarge
      - db.r3.4xlarge
      - db.r3.8xlarge
      - db.r4.large
      - db.r4.xlarge
      - db.r4.2xlarge
      - db.r4.4xlarge
      - db.r4.8xlarge
      - db.r4.16xlarge
    ConstraintDescription: Must be a valid RDS instance class.
    Default: db.t2.medium
    Description: The Amazon RDS database instance class.
    Type: String
  DatabaseMasterUsername:
    AllowedPattern: ^([a-zA-Z0-9]*)$
    Description: The Amazon RDS master username.
    ConstraintDescription: Must contain only alphanumeric characters (minimum 8; maximum 16).
    MaxLength: 16
    MinLength: 8
    Type: String
  DatabaseMasterPassword:
    AllowedPattern: ^([a-z0-9A-Z`~!#$%^&*()_+,\\-])*$
    ConstraintDescription: Must be letters (upper or lower), numbers, and these special characters '_'`~!#$%^&*()_+,-    
    Description: The Amazon RDS master password.
    MaxLength: 41
    MinLength: 8
    NoEcho: true
    Type: String
  DatabaseRestoreSnapshot:
    Description: The snapshot name to restore from.
    Type: String
  DatabaseSecurityGroup:
    Description: Select the database security group.
    Type: AWS::EC2::SecurityGroup::Id
  NumberOfSubnets:
    AllowedValues:
    - 1
    - 2
    - 3
    Default: 2
    Description: Number of subnets. This must match your selections in the list of subnets below.
    Type: String 
  Subnet:
    Description: Select existing subnets. The number selected must match the number of subnets above. Subnets selected must be in separate AZs.
    Type: List<AWS::EC2::Subnet::Id>

Conditions:

  NumberOfSubnets1:
      !Equals [ 1, !Ref NumberOfSubnets ]
  NumberOfSubnets2:
      !Equals [ 2, !Ref NumberOfSubnets ]
  NumberOfSubnets3:
      !Equals [ 3, !Ref NumberOfSubnets ]
  Subnet0: !Or
    - !Condition NumberOfSubnets1
    - !Condition NumberOfSubnets2
    - !Condition NumberOfSubnets3
  Subnet1: !Or
    - !Condition NumberOfSubnets2
    - !Condition NumberOfSubnets3
  Subnet2: !Condition NumberOfSubnets3
  UseAWS-ManagedCMK:
    !Equals ['', !Ref DatabaseCmk]
  NoSnapshot:
    !Equals ['', !Ref DatabaseRestoreSnapshot]

Resources:
  MasterDB:
    Type: AWS::RDS::DBInstance
    DeletionPolicy: Delete
    Properties:
      AllocatedStorage: 20
      AllowMajorVersionUpgrade: false
      AutoMinorVersionUpgrade: true
      BackupRetentionPeriod: 30
      DBInstanceClass: !Ref DatabaseInstanceType
      DBSubnetGroupName: !Ref DataSubnetGroup
      Engine: mysql
      EngineVersion: 8.0
      KmsKeyId:
        !If [ UseAWS-ManagedCMK, !Ref 'AWS::NoValue', !Ref DatabaseCmk ]
      MasterUsername: !If [ NoSnapshot, !Ref DatabaseMasterUsername, !Ref 'AWS::NoValue']
      MasterUserPassword: !If [ NoSnapshot, !Ref DatabaseMasterPassword, !Ref 'AWS::NoValue']
      Port: 3306
      StorageEncrypted: !Ref DatabaseEncrpytedBoolean
      SnapshotIdentifier: !If [ NoSnapshot, !Ref 'AWS::NoValue', !Ref DatabaseRestoreSnapshot]
      Tags:
        - Key: Name
          Value: !Join [ '', [ 'Master DB / ', !Ref 'AWS::StackName' ] ]
      VPCSecurityGroups:
      - !Ref DatabaseSecurityGroup
  ReadReplicaDB:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceClass: !Ref DatabaseInstanceType
      SourceDBInstanceIdentifier: !Ref MasterDB
      Tags:
        - Key: Name
          Value: !Join [ '', [ 'Read Replica DB / ', !Ref 'AWS::StackName' ] ]
  DataSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: RDS Database Subnet Group for Mirovoy Main DBs
      SubnetIds:
        !If
          [ NumberOfSubnets1,
          [ !Select [ 0, !Ref Subnet ] ],
          !If
            [ NumberOfSubnets2,
            [ !Select [ 0, !Ref Subnet ], !Select [ 1, !Ref Subnet ] ],
            [ !Select [ 0, !Ref Subnet ], !Select [ 1, !Ref Subnet ], !Select [ 2, !Ref Subnet ] ]
            ]
          ]
      Tags:
        - Key: Name
          Value: !Join [ '', [ 'Database Subnet Group / ', !Ref 'AWS::StackName' ] ]

Outputs:
  DatabaseInstance0:
    Value: !Ref MasterDB
  DatabaseInstance1:
    Value: !Ref ReadReplicaDB
  DataSubnetGroup:
    Value: !Ref DataSubnetGroup
  MasterDatabaseEndpointAddress:
    Value: !GetAtt MasterDB.Endpoint.Address
  ReadReplicaEndpointAddress:
    Value: !GetAtt ReadReplicaDB.Endpoint.Address

